const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/WhereClause-Dz8uZJBP.js","assets/index-DevCBUKG.js","assets/TimeOnly-BMB7Z6cM.js"])))=>i.map(i=>d[i]);
import{ew as k,h4 as B,b as j,aS as x,l2 as A,l3 as Q,V as X,l4 as Y,l5 as ee,l6 as te,l7 as ie,l8 as se,G as n,H as a,I,bP as re,u as ne,iI as V,df as w,gC as Z,dg as b,gG as oe,aM as ae,a$ as le,gy as de,ex as K,ey as ue,ia as pe,b4 as L,f5 as he,aH as ce,gz as ye,l9 as ge,K as fe,h6 as me,f2 as we,aO as D,dd as _e,gB as f,ez as U,h5 as J,la as ve,dX as Se,aP as be}from"./index-DevCBUKG.js";import{t as Ie}from"./memoize-DmxaQ-k8.js";import{j as He,y as Oe}from"./SketchOptions-B02Otk0h.js";import{g as ke,t as Te,W as $e}from"./boundedPlane-DGGGS6NH.js";import{i as Fe}from"./layerViewUtils-B6v-6Rf9.js";import{o as Pe,i as Me}from"./queryEngineUtils-S49L8kn5.js";import{h as Ce}from"./WorkerHandle-C-bObiA8.js";import{e as ze}from"./projectVectorToVector-mugI6Hyn.js";import"./geodesicUtils-C9PtbE1P.js";import"./plane-C5IqRt5j.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-aQ5IuZRd.js";import"./sphere-BkSyBEso.js";import"./quantityUtils-RzvtvsWV.js";import"./lineSegment-DJlTry_s.js";import"./RouteLayerInteraction-BB94he80.js";import"./GraphicsLayer-Ca3Iw04b.js";import"./RouteLayerView2D-ujr5gojA.js";import"./LayerView-Cg7yG6vq.js";import"./Container-DfivfqTv.js";import"./GraphicContainer-BuaxZ1Pl.js";import"./AGraphicContainer-B2f9-mDW.js";import"./TechniqueInstance-BAFrVbbz.js";import"./UpdateTracking2D-yNOmwD-R.js";import"./BidiEngine-QXap_35O.js";import"./OptimizedFeatureSet-BZTnN_Fi.js";import"./memoryEstimations-CVZhztXY.js";import"./Rect-Cvw5hM_W.js";import"./rasterizingUtils-CdzImkOc.js";import"./floatRGBA-fj_dNia3.js";import"./dataViewUtils-WiOCsy4h.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-Dg9W_aDT.js";import"./VertexArrayObject-BbabfASL.js";import"./TileContainer-V_GJN4E3.js";import"./WGLContainer-BFIt7GmV.js";import"./ProgramTemplate-BeJ1cFia.js";import"./vec3f32-nZdmKIgz.js";import"./config-CAWw3OXK.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-BBYmXYZy.js";import"./FeatureCommandQueue-Cd7dget1.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-DWWXKKQu.js";import"./ShaderBuilder-DIsprVzA.js";import"./BindType-BBwFZqyN.js";import"./QueueProcessor-DGv3OBX6.js";import"./GraphicsView2D-ms4tbhID.js";import"./OverrideHelper-CV3P0nuZ.js";import"./colorUtils-BFN3IuPV.js";import"./quantizationUtils-C3eWQihI.js";import"./FeatureMetadata-CHkL59kU.js";import"./queryUtils-BTYvDKdz.js";import"./json-Wa8cmqdu.js";import"./timeSupport-BRP886bE.js";import"./TimeOnly-BMB7Z6cM.js";import"./dehydratedFeatures-6brI1WLq.js";import"./VertexSnappingCandidate-CNPXQF4c.js";import"./PointSnappingHint-BSX2PnBA.js";import"./projectPointToVector-DTF2ECs-.js";const Ee=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];let O=class extends k{constructor(e){super(e),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._enabled=!0}initialize(){this._symbols=Ee.map(e=>new B({color:[e[0],e[1],e[2],.6],outline:{color:"black",width:1}})),this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(e){this._enabled!==e&&(this._enabled=e,this.update())}update(){if(!this._enabled)return void this.clear();const e=r=>{if(r.label!=null)return r.label;let l=r.lij.toString();return r.loadPriority!=null&&(l+=` (${r.loadPriority})`),r.measures&&(l+=`[${r.measures.lodLevel}]`),l},t=this.getTiles(),i=new Array,o=new Set((this._labels.size,this._labels.keys()));t.forEach((r,l)=>{var T;const d=r.lij.toString();o.delete(d);const c=((T=r.measures)==null?void 0:T.lodLevel)??r.level,h=r.geometry;if(this.enablePolygons&&!this._polygons.has(d)){const v=new j({geometry:h,symbol:this._symbols[c%this._symbols.length]});this._polygons.set(d,v),i.push(v)}if(this.enableLabels){const v=e(r),$=l/(t.length-1),H=A(0,200,$),F=A(20,6,$)/.75,P=r.loadPriority!=null&&r.loadPriority>=t.length,M=new x([H,P?0:H,P?0:H]),C=this.view.type==="3d"?()=>new Q({verticalOffset:new ee({screenLength:40/.75}),callout:new Y({color:new x("white"),border:new ie({color:new x("black")})}),symbolLayers:new X([new te({text:v,halo:{color:"white",size:1/.75},material:{color:M},size:F})])}):()=>new se({text:v,haloColor:"white",haloSize:1/.75,color:M,size:F}),u=this._labels.get(d);if(u){const g=C();u.symbol!=null&&JSON.stringify(g)===JSON.stringify(u.symbol)||(u.symbol=g)}else{const g=new j({geometry:h.extent.center,symbol:C()});this._labels.set(d,g),i.push(g)}}});const s=new Array;o.forEach(r=>{const l=this._polygons.get(r);l!=null&&(s.push(l),this._polygons.delete(r));const d=this._labels.get(r);d!=null&&(s.push(d),this._labels.delete(r))}),this.view.graphics.removeMany(s),this.view.graphics.addMany(i)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};n([a({constructOnly:!0})],O.prototype,"view",void 0),n([a({readOnly:!0})],O.prototype,"updating",void 0),n([a()],O.prototype,"enabled",null),O=n([I("esri.views.support.TileTreeDebugger")],O);function E(e,t){return Te(t.extent,W),ke(W,re(xe,e.x,e.y,0))}const W=$e(),xe=ne();let m=class extends k{get tiles(){const e=this.tilesCoveringView,t=this.pointOfInterest!=null?this.pointOfInterest:this.view.center;return e.sort((i,o)=>E(t,i)-E(t,o)),e}_scaleEnabled(){return Fe(this.view.scale,this.layer.minScale||0,this.layer.maxScale||0)}get tilesCoveringView(){if(!this.view.ready||!this.view.featuresTilingScheme||!this.view.state||this.tileInfo==null)return[];if(!this._scaleEnabled)return[];const{spans:e,lodInfo:t}=this.view.featuresTilingScheme.getTileCoverage(this.view.state,0),{level:i}=t,o=[];for(const{row:s,colFrom:r,colTo:l}of e)for(let d=r;d<=l;d++){const c=t.normalizeCol(d),h=new V(null,i,s,c);this.tileInfo.updateTileInfo(h),o.push(h)}return o}get tileInfo(){var e;return((e=this.view.featuresTilingScheme)==null?void 0:e.tileInfo)??null}get tileSize(){return this.tileInfo!=null?this.tileInfo.size[0]:256}constructor(e){super(e),this.pointOfInterest=null}initialize(){this.addHandles(w(()=>{var e,t;return(t=(e=this.view)==null?void 0:e.state)==null?void 0:t.viewpoint},()=>this.notifyChange("tilesCoveringView"),Z))}};n([a({readOnly:!0})],m.prototype,"tiles",null),n([a({readOnly:!0})],m.prototype,"_scaleEnabled",null),n([a({readOnly:!0})],m.prototype,"tilesCoveringView",null),n([a({readOnly:!0})],m.prototype,"tileInfo",null),n([a({readOnly:!0})],m.prototype,"tileSize",null),n([a({constructOnly:!0})],m.prototype,"view",void 0),n([a({constructOnly:!0})],m.prototype,"layer",void 0),n([a()],m.prototype,"pointOfInterest",void 0),m=n([I("esri.views.2d.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles2D")],m);let _=class extends k{get _sortedTilesCoveringView(){var o,s;const t=(((s=(o=this.view.featureTiles)==null?void 0:o.tiles)==null?void 0:s.toArray())??[]).map(Ve),i=this._effectivePointOfInterest;return i!=null&&t.sort((r,l)=>E(i,r)-E(i,l)),t}get tileInfo(){var t,i;return((i=(t=this.view.featureTiles)==null?void 0:t.tilingScheme)==null?void 0:i.toTileInfo())??null}get tileSize(){var t;return((t=this.view.featureTiles)==null?void 0:t.tileSize)??256}get _effectivePointOfInterest(){var i;const t=this.pointOfInterest;return t??((i=this.view.pointsOfInterest)==null?void 0:i.focus.location)}constructor(t){super(t),this.tiles=[],this.pointOfInterest=null}initialize(){this.addHandles([w(()=>this.view.featureTiles,t=>{this.removeHandles(G),t&&this.addHandles(t.addClient(),G)},b),w(()=>this._sortedTilesCoveringView,t=>this._set("tiles",t),{initial:!0,equals:(t,i)=>oe(t,i,(o,s)=>o.id===s.id)})])}};function Ve({lij:[e,t,i],extent:o}){return new V(`${e}/${t}/${i}`,e,t,i,o)}n([a({readOnly:!0})],_.prototype,"tiles",void 0),n([a({readOnly:!0})],_.prototype,"_sortedTilesCoveringView",null),n([a({readOnly:!0})],_.prototype,"tileInfo",null),n([a({readOnly:!0})],_.prototype,"tileSize",null),n([a({constructOnly:!0})],_.prototype,"view",void 0),n([a()],_.prototype,"pointOfInterest",void 0),n([a()],_.prototype,"_effectivePointOfInterest",null),_=n([I("esri.views.3d.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles3D")],_);const G="feature-tiles";let z=class extends O{constructor(e){super(e)}initialize(){const e=setInterval(()=>this._fetchDebugInfo(),2e3);this.addHandles(ae(()=>clearInterval(e)))}getTiles(){if(!this._debugInfo)return[];const e=new Map,t=new Map;this._debugInfo.storedTiles.forEach(s=>{e.set(s.data.id,s.featureCount)}),this._debugInfo.pendingTiles.forEach(s=>{e.set(s.data.id,s.featureCount),t.set(s.data.id,s.state)});const i=s=>{const r=t.get(s),l=e.get(s)??"?";return r?`${r}:${l}
${s}`:`store:${l}
${s}`},o=new Map;return this._debugInfo.storedTiles.forEach(s=>{o.set(s.data.id,s.data)}),this._debugInfo.pendingTiles.forEach(s=>{o.set(s.data.id,s.data)}),Array.from(o.values()).map(s=>({lij:[s.level,s.row,s.col],level:s.level,geometry:le.fromExtent(de(s.extent,this.view.spatialReference)),label:i(s.id)}))}_fetchDebugInfo(){this.handle.getDebugInfo(null).then(e=>{this._debugInfo=e,this.update()})}};n([a({constructOnly:!0})],z.prototype,"handle",void 0),z=n([I("esri.views.interactive.snapping.featureSources.WorkerTileTreeDebugger")],z);let y=class extends k{get updating(){return this._updatingHandles.updating||this._workerHandleUpdating}constructor(e){super(e),this._updatingHandles=new K,this._suspendController=null,this.schedule=null,this.hasZ=!1,this.elevationAlignPointsInFeatures=async t=>{const i=[];for(const{points:o}of t.pointsInFeatures)for(const{z:s}of o)i.push(s);return{elevations:i,drapedObjectIds:new Set,failedObjectIds:new Set}},this.queryForSymbologySnapping=async()=>({candidates:[],sourceCandidateIndices:[]}),this.availability=0,this._workerHandleUpdating=!0,this.updateOutFields=ue(async(t,i)=>{await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("updateOutFields",[...t],i)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},i))})}destroy(){this._suspendController=pe(this._suspendController),this._workerHandle.destroy(),this._updatingHandles.destroy()}initialize(){this._workerHandle=new Re(this.schedule,{alignElevation:async(e,{signal:t})=>({result:await this.elevationAlignPointsInFeatures(e.query,t)}),getSymbologyCandidates:async(e,{signal:t})=>({result:await this.queryForSymbologySnapping(e,t)})}),this.addHandles([this._workerHandle.on("notify-updating",({updating:e})=>this._workerHandleUpdating=e),this._workerHandle.on("notify-availability",({availability:e})=>this._set("availability",e))])}async setup(e,t){var s;const i=Ne(e.layer);if(i==null)return;const o={configuration:q(e.configuration),serviceInfo:i,spatialReference:e.spatialReference.toJSON(),hasZ:this.hasZ,elevationInfo:(s=e.layer.elevationInfo)==null?void 0:s.toJSON()};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("setup",o,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async configure(e,t){const i=q(e);await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("configure",i,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async refresh(e){await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("refresh",{},e)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},e))}async fetchCandidates(e,t){const{point:i,filter:o,coordinateHelper:s}=e,r={...e,point:ze(i[0],i[1],i[2],s.spatialReference.toJSON()),filter:o==null?void 0:o.toJSON()};return this._workerHandle.invoke(r,t)}async updateTiles(e,t){const i={tiles:e.tiles,tileInfo:e.tileInfo!=null?e.tileInfo.toJSON():null,tileSize:e.tileSize};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("updateTiles",i,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async handleEdits({historicMoment:e,addedFeatures:t,deletedFeatures:i,updatedFeatures:o},s){const r={historicMoment:e,addedFeatures:(t==null?void 0:t.map(({objectId:l})=>l).filter(L))??[],deletedFeatures:(i==null?void 0:i.map(({objectId:l,globalId:d})=>({objectId:l,globalId:d})))??[],updatedFeatures:(o==null?void 0:o.map(({objectId:l})=>l).filter(L))??[]};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("handleEdits",r,s)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},s))}async setHistoricMoment(e,t){await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("setHistoricMoment",{moment:e},t))}getDebugInfo(e){return this._workerHandle.invokeMethod("getDebugInfo",{},e)}async notifyElevationSourceChange(){await this._workerHandle.invokeMethod("notifyElevationSourceChange",{})}async notifySymbologyChange(){await this._workerHandle.invokeMethod("notifySymbologyChange",{})}async setSymbologySnappingSupported(e){await this._workerHandle.invokeMethod("setSymbologySnappingSupported",e)}async setSuspended(e){var t;(t=this._suspendController)==null||t.abort(),this._suspendController=new AbortController,await this._workerHandle.invokeMethod("setSuspended",e,this._suspendController.signal)}};function q(e){return{filter:e.filter!=null?e.filter.toJSON():null,customParameters:e.customParameters,viewType:e.viewType}}function Ne(e){var t,i;return e.geometryType==="multipatch"||e.geometryType==="mesh"?null:{url:((t=e.parsedUrl)==null?void 0:t.path)??"",fieldsIndex:e.fieldsIndex.toJSON(),geometryType:he.toJSON(e.geometryType),capabilities:e.capabilities,objectIdField:e.objectIdField,globalIdField:e.globalIdField,spatialReference:e.spatialReference.toJSON(),timeInfo:(i=e.timeInfo)==null?void 0:i.toJSON()}}n([a({constructOnly:!0})],y.prototype,"schedule",void 0),n([a({constructOnly:!0})],y.prototype,"hasZ",void 0),n([a({constructOnly:!0})],y.prototype,"elevationAlignPointsInFeatures",void 0),n([a({constructOnly:!0})],y.prototype,"queryForSymbologySnapping",void 0),n([a({readOnly:!0})],y.prototype,"updating",null),n([a({readOnly:!0})],y.prototype,"availability",void 0),n([a()],y.prototype,"_workerHandleUpdating",void 0),y=n([I("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],y);class Re extends Ce{constructor(t,i){super("FeatureServiceSnappingSourceWorker","fetchCandidates",{},t,{strategy:"dedicated",client:i})}}let S=class extends k{get tiles(){return[new V("0/0/0",0,0,0,ce(-1e8,-1e8,1e8,1e8))]}get tileInfo(){return new ye({origin:new fe({x:-1e8,y:1e8,spatialReference:this.layer.spatialReference}),size:[512,512],lods:[new ge({level:0,scale:1,resolution:390625})],spatialReference:this.layer.spatialReference})}get tileSize(){return this.tileInfo.size[0]}constructor(e){super(e),this.pointOfInterest=null}};n([a({readOnly:!0})],S.prototype,"tiles",null),n([a({readOnly:!0})],S.prototype,"tileInfo",null),n([a({readOnly:!0})],S.prototype,"tileSize",null),n([a({constructOnly:!0})],S.prototype,"layer",void 0),n([a()],S.prototype,"pointOfInterest",void 0),S=n([I("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTilesSimple")],S);let p=class extends k{get _updateTilesParameters(){return{tiles:this._tilesOfInterest.tiles,tileInfo:this._tilesOfInterest.tileInfo,tileSize:this._tilesOfInterest.tileSize}}get _layerView(){var e;return(e=this.view)==null?void 0:e.allLayerViews.find(t=>t.layer===this._layer)}get _isSuspended(){var e;return me(this._layer)&&!this.layerSource.sublayerSources.some(t=>t.enabled&&t.layer.visible)?!0:!!this.view&&(((e=this._layerView)==null?void 0:e.suspended)!==!1||!this.layerSource.enabled)}get updating(){var e;return((e=this._workerHandle)==null?void 0:e.updating)||this._updatingHandles.updating}get _outFields(){var T,v,$,H,F,P,M,C;const{view:e,_layerView:t,layerSource:i}=this,{layer:o}=i,{fieldsIndex:s,timeInfo:r,floorInfo:l,subtypeField:d}=o,c=t&&"filter"in t?t.filter:null,h=c!=null&&c.where&&c.where!=="1=1"?this._getOrLoadWhereFields(c.where,s):[];if(c!=null&&c.timeExtent&&r){const{startField:u,endField:g}=r,N=((T=s.get(u))==null?void 0:T.name)??u,R=((v=s.get(g))==null?void 0:v.name)??g;N&&h.push(N),R&&h.push(R)}if(e!=null&&e.map&&He(e.map)&&(($=e.map.utilityNetworks)!=null&&$.find(u=>u.isUtilityLayer(o)))){const u=(H=o.fieldsIndex.get("assetGroup"))==null?void 0:H.name,g=(F=o.fieldsIndex.get("assetType"))==null?void 0:F.name;u&&g&&(h.push(u),h.push(g))}if(o&&(l!=null&&l.floorField)&&((P=e==null?void 0:e.floors)!=null&&P.length)){const u=((M=s.get(l.floorField))==null?void 0:M.name)??l.floorField;u&&h.push(u)}if(d){const u=((C=s.get(d))==null?void 0:C.name)??d;u&&h.push(u)}return new Set(h)}get configuration(){var r;const{view:e}=this,{apiKey:t,customParameters:i}=this._layer,o=e!=null?e.type:"2d",s=this._layer.createQuery();return this._layerView&&"effectiveDisplayFilter"in this._layerView&&(s.where=we(s.where,(r=this._layerView.effectiveDisplayFilter)==null?void 0:r.where)),{filter:s,customParameters:t?{...i,token:t}:i,viewType:o}}get availability(){var e;return((e=this._workerHandle)==null?void 0:e.availability)??0}get _layer(){return this.layerSource.layer}constructor(e){super(e),this._updatingHandles=new K,this._workerHandle=null,this._debug=null,this._memoizedMakeGetGroundElevation=Ie(Me)}initialize(){let e;const t=this.view;if(t==null||t.destroyed)this._tilesOfInterest=new S({layer:this._layer}),e=this._workerHandle=new y;else switch(t.type){case"2d":this._tilesOfInterest=new m({view:t,layer:this._layer}),e=this._workerHandle=new y;break;case"3d":{const{resourceController:i}=t,o=this._layer;this._tilesOfInterest=new _({view:t}),e=this._workerHandle=new y({schedule:s=>i.immediate.schedule(s),hasZ:this._layer.hasZ&&(this._layer.returnZ??!0),elevationAlignPointsInFeatures:async(s,r)=>{const l=await t.whenLayerView(o);return D(r),l.elevationAlignPointsInFeatures(s,r)},queryForSymbologySnapping:async(s,r)=>{const l=await t.whenLayerView(o);return D(r),l.queryForSymbologySnapping(s,r)}}),this.addHandles([t.elevationProvider.on("elevation-change",({context:s})=>{const{elevationInfo:r}=o;Oe(s,r)&&f(e.notifyElevationSourceChange())}),w(()=>o.elevationInfo,()=>f(e.notifyElevationSourceChange()),b),w(()=>{var s,r;return(r=(s=this._layerView)==null?void 0:s.layer)==null?void 0:r.renderer},()=>f(e.notifySymbologyChange()),b),w(()=>{var s;return((s=this._layerView)==null?void 0:s.symbologySnappingSupported)??!1},s=>f(e.setSymbologySnappingSupported(s)),b),_e(()=>{var s;return(s=this._layerView)==null?void 0:s.layer},["edits","apply-edits","graphic-update"],()=>e.notifySymbologyChange())]);break}}this.addHandles([U(e)]),f(e.setup({layer:this._layer,spatialReference:this.spatialReference,configuration:this.configuration},null)),this._updatingHandles.add(()=>this._updateTilesParameters,()=>f(e.updateTiles(this._updateTilesParameters,null)),b),this.addHandles([w(()=>this.configuration,i=>f(e.configure(i,null)),Z),w(()=>this._layer.historicMoment,i=>f(e.setHistoricMoment(i)),J),w(()=>this._outFields,i=>f(e.updateOutFields(i)),b),w(()=>this._isSuspended,i=>f(e.setSuspended(i)),J)]),t!=null&&this.addHandles(w(()=>ve.FEATURE_SERVICE_SNAPPING_SOURCE_TILE_TREE_SHOW_TILES,i=>{i&&!this._debug?(this._debug=new z({view:t,handle:e}),this.addHandles(U(this._debug),"debug")):!i&&this._debug&&this.removeHandles("debug")},b)),this.addHandles([this.layerSource.layer.on("edits",i=>f(e.handleEdits(i,null))),this.layerSource.layer.on("apply-edits",i=>this._updatingHandles.addPromise(i.result))])}destroy(){this._updatingHandles.destroy(),this._tilesOfInterest.destroy()}refresh(){var e;(e=this._workerHandle)==null||e.refresh(null)}async fetchCandidates(e,t){const{coordinateHelper:i,point:o}=e;this._tilesOfInterest.pointOfInterest=i.arrayToPoint(o);const s=this._memoizedMakeGetGroundElevation(this.view,i.spatialReference);return(await this._workerHandle.fetchCandidates({...e},t)).candidates.map(r=>Pe(r,s))}getDebugInfo(e){return this._workerHandle.getDebugInfo(e)}_getOrLoadWhereFields(e,t){const{_whereModule:i}=this;if(!this._loadWhereModuleTask&&!i){const o=Se(async()=>{const s=await be(()=>import("./WhereClause-Dz8uZJBP.js").then(r=>r.W),__vite__mapDeps([0,1,2]));return this._whereModule=s.default,this._whereModule});return this._loadWhereModuleTask=o,this._updatingHandles.addPromise(o.promise),[]}if(!i)return[];try{return i.create(e,{fieldsIndex:t}).fieldNames}catch{return[]}}};n([a({constructOnly:!0})],p.prototype,"spatialReference",void 0),n([a({constructOnly:!0})],p.prototype,"layerSource",void 0),n([a({constructOnly:!0})],p.prototype,"view",void 0),n([a()],p.prototype,"_tilesOfInterest",void 0),n([a({readOnly:!0})],p.prototype,"_updateTilesParameters",null),n([a()],p.prototype,"_layerView",null),n([a()],p.prototype,"_isSuspended",null),n([a({readOnly:!0})],p.prototype,"updating",null),n([a()],p.prototype,"_outFields",null),n([a({readOnly:!0})],p.prototype,"configuration",null),n([a({readOnly:!0})],p.prototype,"availability",null),n([a()],p.prototype,"_loadWhereModuleTask",void 0),n([a()],p.prototype,"_whereModule",void 0),p=n([I("esri.views.interactive.snapping.featureSources.FeatureServiceSnappingSource")],p);export{p as FeatureServiceSnappingSource};
