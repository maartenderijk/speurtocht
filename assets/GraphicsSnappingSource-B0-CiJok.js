import{ew as v,f1 as S,aO as h,ex as w,dg as m,df as b,dd as k,f3 as E,dX as $,ae as C,f4 as F,a$ as G,ab as P,b0 as A,f5 as H,d6 as I,dQ as O,G as a,H as l,I as R}from"./index-DevCBUKG.js";import{t as x}from"./memoize-DmxaQ-k8.js";import{a as Z}from"./FeatureMetadata-CHkL59kU.js";import{s as L}from"./featureConversionUtils-BBYmXYZy.js";import{s as z}from"./OptimizedFeatureSet-BZTnN_Fi.js";import{u as M,f as W}from"./executeQueryForSnapping-BUMtAA01.js";import{L as N}from"./QueryEngine-CpXuZO5Q.js";import{y as j,E as q,h as T}from"./SketchOptions-B02Otk0h.js";import{N as y}from"./utils-Cd3Ex-HP.js";import{o as J,i as U}from"./queryEngineUtils-S49L8kn5.js";import{i as g,r as B,n as f}from"./symbologySnappingCandidates-Dq8DsRP9.js";import"./dataViewUtils-WiOCsy4h.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./UpdateTracking2D-yNOmwD-R.js";import"./BidiEngine-QXap_35O.js";import"./Rect-Cvw5hM_W.js";import"./rasterizingUtils-CdzImkOc.js";import"./floatRGBA-fj_dNia3.js";import"./queryUtils-BTYvDKdz.js";import"./json-Wa8cmqdu.js";import"./timeSupport-BRP886bE.js";import"./TimeOnly-BMB7Z6cM.js";import"./quantizationUtils-C3eWQihI.js";import"./memoryEstimations-CVZhztXY.js";import"./PooledRBush-BT_siGaI.js";import"./optimizedFeatureQueryEngineAdapter-Cdd-VHWg.js";import"./WhereClauseCache-CC2Sb6RQ.js";import"./WhereClause-Dz8uZJBP.js";import"./utils-C9CVa639.js";import"./utils-DPDdBmz0.js";import"./SnappingCandidate-DGkpYqI6.js";import"./FixedIntervalBinParameters-DgAHVtMn.js";import"./geodesicUtils-C9PtbE1P.js";import"./plane-C5IqRt5j.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-aQ5IuZRd.js";import"./sphere-BkSyBEso.js";import"./projectVectorToVector-mugI6Hyn.js";import"./projectPointToVector-DTF2ECs-.js";import"./quantityUtils-RzvtvsWV.js";import"./cimSymbolUtils-B6LskTaj.js";import"./RouteLayerInteraction-BB94he80.js";import"./GraphicsLayer-Ca3Iw04b.js";import"./RouteLayerView2D-ujr5gojA.js";import"./LayerView-Cg7yG6vq.js";import"./Container-DfivfqTv.js";import"./layerViewUtils-B6v-6Rf9.js";import"./GraphicContainer-BuaxZ1Pl.js";import"./AGraphicContainer-B2f9-mDW.js";import"./TechniqueInstance-BAFrVbbz.js";import"./FramebufferObject-Dg9W_aDT.js";import"./VertexArrayObject-BbabfASL.js";import"./TileContainer-V_GJN4E3.js";import"./WGLContainer-BFIt7GmV.js";import"./ProgramTemplate-BeJ1cFia.js";import"./vec3f32-nZdmKIgz.js";import"./config-CAWw3OXK.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-Cd7dget1.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-DWWXKKQu.js";import"./ShaderBuilder-DIsprVzA.js";import"./BindType-BBwFZqyN.js";import"./QueueProcessor-DGv3OBX6.js";import"./GraphicsView2D-ms4tbhID.js";import"./OverrideHelper-CV3P0nuZ.js";import"./colorUtils-BFN3IuPV.js";import"./dehydratedFeatures-6brI1WLq.js";import"./VertexSnappingCandidate-CNPXQF4c.js";import"./PointSnappingHint-BSX2PnBA.js";const _="graphics-collections";let n=class extends v{get updating(){return this._updatingHandles.updating}get _hasZ(){const t=this.view;return t!=null&&t.type==="3d"&&this.layerSource.layer.type!=="map-notes"}get _snappingElevationAligner(){const{view:t}=this,{layer:e}=this.layerSource,i=t!=null&&t.type==="3d";if(!i||e.type==="map-notes")return g();const o=async(r,s)=>(await S(t.whenLayerView(e),s)).elevationAlignPointsInFeatures(r,s);return g(i,{elevationInfo:e.elevationInfo,alignPointsInFeatures:o})}get _snappingElevationFilter(){const{view:t}=this,e=t!=null&&t.type==="3d"&&this.layerSource.layer.type!=="map-notes";return B(e)}get _symbologySnappingFetcher(){const{view:t}=this,{layer:e}=this.layerSource,i=t!=null&&t.type==="3d",o=this._extrudedPolygonSymbolsCount>0;return i&&e.type!=="map-notes"&&o?f(o,async(r,s)=>{const p=await t.whenLayerView(e);return h(s),p.queryForSymbologySnapping({candidates:r,spatialReference:t.spatialReference},s)}):f()}constructor(t){super(t),this.availability=1,this._sources={multipoint:null,point:null,polygon:null,polyline:null},this._loadedWkids=new Set,this._loadedWkts=new Set,this._pendingAdds=[],this._extrudedPolygonSymbolsCount=0,this._updatingHandles=new w,this._memoizedMakeGetGroundElevation=x(U)}destroy(){for(const t of this._pendingAdds)t.task.abort();this._pendingAdds.length=0,this._mapSources(t=>this._destroySource(t)),this._updatingHandles.destroy()}initialize(){this._updatingHandles.add(()=>this.getGraphicsLayers(),i=>{this._updatingHandles.removeHandles(_);for(const o of i)this._addMany(o.graphics.toArray()),this.addHandles([o.on("graphic-update",r=>this._onGraphicUpdate(r)),this._updatingHandles.addOnCollectionChange(()=>o.graphics,r=>this._onGraphicsChanged(r))],_)},m);const{view:t}=this,{layer:e}=this.layerSource;t!=null&&t.type==="3d"&&e.type!=="map-notes"&&t.elevationProvider&&this.addHandles([t.elevationProvider.on("elevation-change",({context:i})=>{j(i,e.elevationInfo)&&this._snappingElevationAligner.notifyElevationSourceChange()}),b(()=>e.elevationInfo,()=>this._snappingElevationAligner.notifyElevationSourceChange(),m),k(()=>e,["edits","apply-edits","graphic-update"],()=>this._symbologySnappingFetcher.notifySymbologyChange())])}async fetchCandidates(t,e){const{point:i,coordinateHelper:{spatialReference:o}}=t,r=await E(this._mapSources(d=>this._fetchCandidatesForSource(d,t,e)));h(e);const s=this._memoizedMakeGetGroundElevation(this.view,o),p=r.flat().map(d=>J(d,s));return q(i,p),p}async _fetchCandidatesForSource(t,e,i){var u;const o=T(e,((u=this.view)==null?void 0:u.type)??"2d"),r=await M(t.queryEngine,o,i);h(i);const s=await this._snappingElevationAligner.alignCandidates(r.candidates,e.coordinateHelper.spatialReference,i);h(i);const p=await this._symbologySnappingFetcher.fetch(s,i);h(i);const d=p.length===0?s:[...s,...p];return this._snappingElevationFilter.filter(o,d)}refresh(){}_onGraphicUpdate(t){if(this.getGraphicsLayers().some(e=>e.graphics.includes(t.graphic)))switch(t.property){case"geometry":case"visible":this._remove(t.graphic),this._addMany([t.graphic])}}_onGraphicsChanged(t){for(const e of t.removed)this._remove(e);this._addMany(t.added)}_addMany(t){const e=[],i=new Map;for(const o of t)o.geometry!=null&&(this._needsInitializeProjection(o.geometry.spatialReference)?(e.push(o.geometry.spatialReference),i.set(o.uid,o)):this._add(o));this._createPendingAdd(e,i)}_createPendingAdd(t,e){if(!t.length)return;const i=$(async s=>{await C(t.map(p=>({source:p,dest:this.spatialReference})),{signal:s}),this._markLoadedSpatialReferences(t);for(const p of e.values())this._add(p)});this._updatingHandles.addPromise(i.promise);const o={task:i,graphics:e},r=()=>F(this._pendingAdds,o);i.promise.then(r,r),this._pendingAdds.push(o)}_markLoadedSpatialReferences(t){for(const e of t){e.wkid!=null&&this._loadedWkids.add(e.wkid);const i=e.wkt2||e.wkt;i&&this._loadedWkts.add(i)}}_add(t){if(t.geometry==null||!t.visible)return;let e=t.geometry;if(e.type==="mesh")return;e.type==="extent"&&(e=G.fromExtent(e));const i=this._ensureSource(e.type);if(i==null)return;const o=this._createOptimizedFeature(t.uid,e);o!=null&&(i.featureStore.add(o),y(t.symbol)&&this._extrudedPolygonSymbolsCount++)}_needsInitializeProjection(t){if(t.wkid!=null&&this._loadedWkids.has(t.wkid))return!1;const e=t.wkt2||t.wkt;return(!e||!this._loadedWkts.has(e))&&!P(t,this.spatialReference)}_createOptimizedFeature(t,e){const i=A(Z(e),this.spatialReference);if(!i)return null;const o=this._ensureGeometryHasZ(i),r=L(o,this._hasZ,!1);return new z(r,{[c]:t},null,t)}_ensureGeometryHasZ(t){if(!this._hasZ)return t;const e=o=>{for(;o.length<3;)o.push(0)},i=t.clone();switch(i.hasZ=!0,i.type){case"point":i.z=i.z??0;break;case"multipoint":i.points.forEach(e);break;case"polyline":i.paths.forEach(o=>o.forEach(e));break;case"polygon":i.rings.forEach(o=>o.forEach(e))}return i}_ensureSource(t){const e=this._sources[t];if(e!=null)return e;const i=this._createSource(t);return this._sources[t]=i,i}_createSource(t){const e=H.toJSON(t),i=this._hasZ,o=new W({geometryType:e,hasZ:i,hasM:!1});return{featureStore:o,queryEngine:new N({featureStore:o,fieldsIndex:O.fromLayerJSON({fields:[{name:c,type:"esriFieldTypeOID",alias:c}]}),geometryType:e,hasM:!1,hasZ:i,objectIdField:c,spatialReference:this.spatialReference,priority:I.SNAPPING,scheduler:this.view!=null&&this.view.type==="3d"?this.view.resourceController.scheduler:null}),type:t}}_remove(t){this._mapSources(e=>this._removeFromSource(e,t));for(const e of this._pendingAdds)e.graphics.delete(t.uid),e.graphics.size===0&&e.task.abort()}_removeFromSource(t,e){const i=e.uid;t.featureStore.has(i)&&(t.featureStore.removeById(e.uid),y(e.symbol)&&this._extrudedPolygonSymbolsCount--)}_destroySource(t){t.queryEngine.destroy(),this._sources[t.type]=null}_mapSources(t){const{point:e,polygon:i,polyline:o,multipoint:r}=this._sources,s=[];return e!=null&&s.push(t(e)),i!=null&&s.push(t(i)),o!=null&&s.push(t(o)),r!=null&&s.push(t(r)),s}};a([l()],n.prototype,"getGraphicsLayers",void 0),a([l({constructOnly:!0})],n.prototype,"layerSource",void 0),a([l({constructOnly:!0})],n.prototype,"spatialReference",void 0),a([l({constructOnly:!0})],n.prototype,"view",void 0),a([l({readOnly:!0})],n.prototype,"updating",null),a([l({readOnly:!0})],n.prototype,"availability",void 0),a([l()],n.prototype,"_hasZ",null),a([l()],n.prototype,"_snappingElevationAligner",null),a([l()],n.prototype,"_snappingElevationFilter",null),a([l()],n.prototype,"_symbologySnappingFetcher",null),a([l()],n.prototype,"_extrudedPolygonSymbolsCount",void 0),n=a([R("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],n);const c="OBJECTID";export{n as GraphicsSnappingSource};
