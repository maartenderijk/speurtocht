import{dk as m,dl as c,b as g,V as n,b4 as l,aM as h,d9 as d,G as o,H as w,I as u}from"./index-BHVnKyhT.js";import{S as y,y as V}from"./LayerView-BrpKobh9.js";import{t as v}from"./GraphicContainer-Dbz0XukG.js";import{A as f}from"./GraphicsView2D-COgF-Qw3.js";import"./Container-BHdaAQk1.js";import"./layerViewUtils-QkZfw_iD.js";import"./AGraphicContainer-CF85rCUf.js";import"./TechniqueInstance-B-MRt030.js";import"./UpdateTracking2D-BCoQRp-R.js";import"./BidiEngine-QXap_35O.js";import"./OptimizedFeatureSet-Cn6HMkdb.js";import"./memoryEstimations-BUE6DQXJ.js";import"./Rect-Dbkov3pw.js";import"./rasterizingUtils-C82vF-tV.js";import"./floatRGBA-Cql13dfU.js";import"./dataViewUtils-ep6eogYV.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-CjTOOEjF.js";import"./VertexArrayObject-ClhX_t7T.js";import"./TileContainer-Dzxw3koD.js";import"./WGLContainer-Cg1TGbst.js";import"./ProgramTemplate-BhaNcNBO.js";import"./vec3f32-nZdmKIgz.js";import"./config-Dr-jlMOW.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-l2BVzl9X.js";import"./FeatureCommandQueue-0MiMkjMa.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-ZTsUlqJ0.js";import"./ShaderBuilder-CTTP6Baf.js";import"./BindType-BBwFZqyN.js";import"./QueueProcessor-Aqz3LJk0.js";import"./OverrideHelper-B20VC_xN.js";import"./colorUtils-Cd5-qIll.js";import"./quantizationUtils-D7JV8TFB.js";import"./FeatureMetadata-DvNNxeZV.js";import"./queryUtils-CKDmdfmI.js";import"./json-Wa8cmqdu.js";import"./timeSupport-B94wrQIy.js";import"./TimeOnly-vyU5_moK.js";import"./mat3f64-q3fE-ZOt.js";import"./dehydratedFeatures-BnVBisL0.js";let p=class extends y(V){attach(){this.graphicsView=new f({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new v(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),m(()=>{var i;return(i=this.layer)==null?void 0:i.visible},()=>{this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate()})]),this._processHighlight()}detach(){this.container.removeAllChildren(),this.graphicsView=c(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,t){let r;typeof i=="number"?r=[i]:i instanceof g?r=[i.uid]:Array.isArray(i)&&i.length>0?r=typeof i[0]=="number"?i:i.map(s=>s&&s.uid):n.isCollection(i)&&i.length>0&&(r=i.map(s=>s&&s.uid).toArray());const e=r==null?void 0:r.filter(l);if(!(e!=null&&e.length))return h();const a=(t==null?void 0:t.name)??d;return this._addHighlights(e,a),h(()=>!this.destroyed&&this._removeHighlights(e,a))}_processHighlight(){var t;const i=this._getHighlights();(t=this.graphicsView)==null||t.setHighlight(i)}};o([w()],p.prototype,"graphicsView",void 0),p=o([u("esri.views.2d.layers.GraphicsLayerView2D")],p);const mi=p;export{mi as default};
