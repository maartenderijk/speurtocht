import{dk as m,dl as c,b as g,V as n,b4 as l,aM as h,d9 as d,G as o,H as w,I as u}from"./index-CZ5hE8fp.js";import{S as y,y as V}from"./LayerView-Chqv9rkn.js";import{t as v}from"./GraphicContainer-Sra4z3O6.js";import{A as f}from"./GraphicsView2D-Bn0Sj1hX.js";import"./Container-Bcoanpcy.js";import"./layerViewUtils-tYn3XfT9.js";import"./AGraphicContainer-C_7Pwz5T.js";import"./TechniqueInstance-hct1x6UA.js";import"./UpdateTracking2D-CZILwAxP.js";import"./BidiEngine-QXap_35O.js";import"./OptimizedFeatureSet-xqZqApCH.js";import"./memoryEstimations-B6bMMgTZ.js";import"./Rect-BDemx-Ly.js";import"./rasterizingUtils-DsNuqkbG.js";import"./floatRGBA-C51THpw8.js";import"./dataViewUtils-DDgDo3Ji.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-BS2zNKUU.js";import"./VertexArrayObject-DulQagr-.js";import"./TileContainer-Aj5RzmSu.js";import"./WGLContainer-umnTRQgX.js";import"./ProgramTemplate-rbh8Cw0m.js";import"./vec3f32-nZdmKIgz.js";import"./config-CLlNJHr5.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-C-UuyJ2o.js";import"./FeatureCommandQueue-F5i1KWWH.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-Cxli1lea.js";import"./ShaderBuilder-CDN5UO2A.js";import"./BindType-BBwFZqyN.js";import"./QueueProcessor-CQsw5KsH.js";import"./OverrideHelper-DoAu-g7T.js";import"./colorUtils-Bb84aurD.js";import"./quantizationUtils-B-YtPy0C.js";import"./FeatureMetadata-ztY0VNuy.js";import"./queryUtils-CJ0lTcFl.js";import"./json-Wa8cmqdu.js";import"./timeSupport-BgyZAOwQ.js";import"./TimeOnly-Ci18p41_.js";import"./mat3f64-q3fE-ZOt.js";import"./dehydratedFeatures-Db4BZh0G.js";let p=class extends y(V){attach(){this.graphicsView=new f({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new v(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),m(()=>{var i;return(i=this.layer)==null?void 0:i.visible},()=>{this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate()})]),this._processHighlight()}detach(){this.container.removeAllChildren(),this.graphicsView=c(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,t){let r;typeof i=="number"?r=[i]:i instanceof g?r=[i.uid]:Array.isArray(i)&&i.length>0?r=typeof i[0]=="number"?i:i.map(s=>s&&s.uid):n.isCollection(i)&&i.length>0&&(r=i.map(s=>s&&s.uid).toArray());const e=r==null?void 0:r.filter(l);if(!(e!=null&&e.length))return h();const a=(t==null?void 0:t.name)??d;return this._addHighlights(e,a),h(()=>!this.destroyed&&this._removeHighlights(e,a))}_processHighlight(){var t;const i=this._getHighlights();(t=this.graphicsView)==null||t.setHighlight(i)}};o([w()],p.prototype,"graphicsView",void 0),p=o([u("esri.views.2d.layers.GraphicsLayerView2D")],p);const mi=p;export{mi as default};
