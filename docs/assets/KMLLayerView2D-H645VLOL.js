import{ij as Q,as as X,dy as Z,ar as H,a as C,ei as q,ik as R,il as D,im as M,af as A,io as ee,ay as te,di as ie,dh as se,S as ae,b3 as U,G as g,H as w,I as J,b0 as L,K as O,dm as z,dr as N,du as re,dp as oe,hL as F,ds as ne,bp as $,V as le,df as he,ia as pe,dl as k,b2 as ce,ip as B,az as ue,iq as me,ir as de}from"./index-B1clX_ad.js";import{g as fe,f as ye,S as ge}from"./BitmapTechnique-D8kioeO5.js";import{r as _e}from"./BitmapContainer-C5-Dpo2X.js";import{S as we,y as be}from"./LayerView--6oe_-ag.js";import{t as T}from"./GraphicContainer-CYMQY4O0.js";import{A as E}from"./GraphicsView2D-9mW9ljGt.js";import{z as xe,a as Se}from"./rasterProjectionHelper-BMokJrXe.js";import{n as Ve}from"./VertexStream-B_y_PBcB.js";import{y as ve,o as Ie}from"./MaterialPrograms-5Yt3B1GH.js";import{x as Pe}from"./FramebufferObject-Cc54bW9q.js";import{m as Ce}from"./rasterUtils-DZun6HWB.js";const De={esriGeometryPoint:"points",esriGeometryPolyline:"polylines",esriGeometryPolygon:"polygons"};function Me(t){var n;const e=t.folders||[],i=e.slice(),r=new Map,a=new Map,s=new Map,o=new Map,c=new Map,h={esriGeometryPoint:a,esriGeometryPolyline:s,esriGeometryPolygon:o};(((n=t.featureCollection)==null?void 0:n.layers)||[]).forEach(l=>{const d=C(l);d.featureSet.features=[];const u=l.featureSet.geometryType;r.set(u,d);const m=l.layerDefinition.objectIdField;u==="esriGeometryPoint"?G(a,m,l.featureSet.features):u==="esriGeometryPolyline"?G(s,m,l.featureSet.features):u==="esriGeometryPolygon"&&G(o,m,l.featureSet.features)}),t.groundOverlays&&t.groundOverlays.forEach(l=>{c.set(l.id,l)}),e.forEach(l=>{l.networkLinkIds.forEach(d=>{const u=$e(d,l.id,t.networkLinks);u&&i.push(u)})}),i.forEach(l=>{var d;if(l.featureInfos){l.points=C(r.get("esriGeometryPoint")),l.polylines=C(r.get("esriGeometryPolyline")),l.polygons=C(r.get("esriGeometryPolygon")),l.mapImages=[];for(const u of l.featureInfos)switch(u.type){case"esriGeometryPoint":case"esriGeometryPolyline":case"esriGeometryPolygon":{const m=h[u.type].get(u.id);m&&((d=l[De[u.type]])==null||d.featureSet.features.push(m));break}case"GroundOverlay":{const m=c.get(u.id);m&&l.mapImages.push(m);break}}l.fullExtent=K([l])}});const p=K(i);return{folders:e,sublayers:i,extent:p}}function ke(t,e,i,r){var o;const a=(o=X)==null?void 0:o.findCredential(t);t=Q(t,{token:a==null?void 0:a.token});const s=Z.kmlServiceUrl;return H(s,{query:{url:t,model:"simple",folders:"",refresh:i!==0||void 0,outSR:JSON.stringify(e)},responseType:"json",signal:r})}function Be(t,e,i=null,r=[]){const a=[],s={},o=e.sublayers,c=new Set(e.folders.map(h=>h.id));return o.forEach(h=>{var n;const p=new t;if(i?p.read(h,i):p.read(h),r.length&&c.has(p.id)&&(p.visible=r.includes(p.id)),s[h.id]=p,h.parentFolderId!=null&&h.parentFolderId!==-1){const l=s[h.parentFolderId];l.sublayers||(l.sublayers=[]),(n=l.sublayers)==null||n.unshift(p)}else a.unshift(p)}),a}function G(t,e,i){i.forEach(r=>{t.set(r.attributes[e],r)})}function Re(t,e){let i;return e.some(r=>r.id===t&&(i=r,!0)),i}function $e(t,e,i){const r=Re(t,i);return r&&(r.parentFolderId=e,r.networkLink=r),r}async function j(t){const e=te.fromJSON(t.featureSet).features,i=t.layerDefinition,r=ie(i.drawingInfo.renderer),a=se.fromJSON(t.popupInfo),s=[];for(const o of e){const c=await r.getSymbolAsync(o);o.symbol=c,o.popupTemplate=a,o.visible=!0,s.push(o)}return s}function K(t){var r,a,s,o,c,h;const e=q(R),i=q(R);for(const p of t){if((a=(r=p.polygons)==null?void 0:r.featureSet)!=null&&a.features)for(const n of p.polygons.featureSet.features)D(e,n.geometry),M(i,e);if((o=(s=p.polylines)==null?void 0:s.featureSet)!=null&&o.features)for(const n of p.polylines.featureSet.features)D(e,n.geometry),M(i,e);if((h=(c=p.points)==null?void 0:c.featureSet)!=null&&h.features)for(const n of p.points.featureSet.features)D(e,n.geometry),M(i,e);if(p.mapImages)for(const n of p.mapImages)D(e,n.extent),M(i,e)}return ee(i,R)?void 0:{xmin:i[0],ymin:i[1],zmin:i[2],xmax:i[3],ymax:i[4],zmax:i[5],spatialReference:A.WGS84}}let b=class extends ae{constructor(){super(...arguments),this.id=0,this.rotation=0,this.href="",this.extent=new U}};g([w({nonNullable:!0,json:{write:!0}})],b.prototype,"id",void 0),g([w({nonNullable:!0,json:{write:!0}})],b.prototype,"rotation",void 0),g([w({nonNullable:!0,json:{write:!0}})],b.prototype,"href",void 0),g([w({type:U,nonNullable:!0,json:{write:!0}})],b.prototype,"extent",void 0),b=g([J("esri.layers.support.KMLMapImage")],b);class f{constructor(e){if(this._ownsRctx=!1,e)this._ownsRctx=!1,this._rctx=e;else{if(f._instance)return f._instanceRefCount++,f._instance;f._instanceRefCount=1,f._instance=this,this._ownsRctx=!0;const a=document.createElement("canvas").getContext("webgl2");a.getExtension("OES_texture_float"),this._rctx=new ve(a,{})}const i={applyProjection:!0,bilinear:!1,bicubic:!1},r=Ie("raster/reproject","raster/reproject",new Map([["a_position",0]]),i);this._program=this._rctx.programCache.acquire(r.shaders.vertexShader,r.shaders.fragmentShader,r.attributes),this._rctx.useProgram(this._program),this._program.setUniform1f("u_opacity",1),this._program.setUniform1i("u_image",0),this._program.setUniform1i("u_flipY",0),this._program.setUniform1i("u_transformGrid",1),this._quad=new Ve(this._rctx,[0,0,1,0,0,1,1,1])}reprojectTexture(e,i,r=!1){const a=L(e.extent,i),s=new O({x:(e.extent.xmax-e.extent.xmin)/e.texture.descriptor.width,y:(e.extent.ymax-e.extent.ymin)/e.texture.descriptor.height,spatialReference:e.extent.spatialReference}),{x:o,y:c}=xe(s,i,e.extent);let h=(o+c)/2;const p=Math.round((a.xmax-a.xmin)/h),n=Math.round((a.ymax-a.ymin)/h);h=(a.width/p+a.height/n)/2;const l=new O({x:h,y:h,spatialReference:a.spatialReference}),d=Se({projectedExtent:a,srcBufferExtent:e.extent,pixelSize:l,hasWrapAround:!0,spacing:[16,16]}),u=Ce(this._rctx,d),m=new z(p,n);m.wrapMode=N.CLAMP_TO_EDGE;const y=new Pe(this._rctx,m);this._rctx.bindFramebuffer(y),this._rctx.setViewport(0,0,p,n),this._rctx.useProgram(this._program),this._rctx.bindTexture(e.texture,0),this._rctx.bindTexture(u,1),this._quad.bind();const{width:V=0,height:v=0}=e.texture.descriptor;if(this._program.setUniform2f("u_srcImageSize",V,v),this._program.setUniform2fv("u_transformSpacing",d.spacing),this._program.setUniform2fv("u_transformGridSize",d.size),this._program.setUniform2f("u_targetImageSize",p,n),this._quad.draw(),this._quad.unbind(),this._rctx.useProgram(null),this._rctx.bindFramebuffer(null),u.dispose(),r){const{width:_,height:P}=y,S=new ImageData(_??0,P??0);y.readPixels(0,0,_??0,P??0,re.RGBA,oe.UNSIGNED_BYTE,S.data);const Y=y.detachColorTexture(F.COLOR_ATTACHMENT0);return y.dispose(),{texture:Y,extent:a,imageData:S}}const I=y.detachColorTexture(F.COLOR_ATTACHMENT0);return y.dispose(),{texture:I,extent:a}}reprojectBitmapData(e,i){const r=fe(e.bitmapData)?ye(e.bitmapData):e.bitmapData,a=new z;a.wrapMode=N.CLAMP_TO_EDGE,a.width=e.bitmapData.width,a.height=e.bitmapData.height;const s=new ne(this._rctx,a,r),o=this.reprojectTexture({texture:s,extent:e.extent},i,!0);o.texture.dispose();const c=document.createElement("canvas"),h=o.imageData;return c.width=h.width,c.height=h.height,c.getContext("2d").putImageData(h,0,0),{bitmapData:c,extent:o.extent}}async loadAndReprojectBitmapData(e,i,r){const a=(await H(e,{responseType:"image"})).data,s=document.createElement("canvas");s.width=a.width,s.height=a.height;const o=s.getContext("2d");o.drawImage(a,0,0);const c=o.getImageData(0,0,s.width,s.height);if(i.spatialReference.equals(r))return{bitmapData:c,extent:i};const h=this.reprojectBitmapData({bitmapData:c,extent:i},r);return{bitmapData:h.bitmapData,extent:h.extent}}destroy(){this._ownsRctx?(f._instanceRefCount--,f._instanceRefCount===0&&(this._quad.dispose(),this._program.dispose(),this._rctx.dispose(),f._instance=null)):(this._quad.dispose(),this._program.dispose())}}f._instanceRefCount=0;class W{constructor(){this.allSublayers=new Map,this.allPoints=[],this.allPolylines=[],this.allPolygons=[],this.allMapImages=[]}}let x=class extends we(be){constructor(){super(...arguments),this._bitmapIndex=new Map,this._mapImageContainer=new _e,this._kmlVisualData=new W,this._fetchController=null,this.allVisiblePoints=new $,this.allVisiblePolylines=new $,this.allVisiblePolygons=new $,this.allVisibleMapImages=new le}async hitTest(t,e){var r,a,s;const i=this.layer;return[(r=this._pointsView)==null?void 0:r.hitTest(t),(a=this._polylinesView)==null?void 0:a.hitTest(t),(s=this._polygonsView)==null?void 0:s.hitTest(t)].flat().filter(Boolean).map(o=>(o.layer=i,o.sourceLayer=i,{type:"graphic",graphic:o,layer:i,mapPoint:t}))}update(t){this._polygonsView&&this._polygonsView.processUpdate(t),this._polylinesView&&this._polylinesView.processUpdate(t),this._pointsView&&this._pointsView.processUpdate(t)}attach(){this._fetchController=new AbortController,this.container.addChild(this._mapImageContainer),this._polygonsView=new E({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate(),container:new T(this.view.featuresTilingScheme)}),this.container.addChild(this._polygonsView.container),this._polylinesView=new E({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate(),container:new T(this.view.featuresTilingScheme)}),this.container.addChild(this._polylinesView.container),this._pointsView=new E({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate(),container:new T(this.view.featuresTilingScheme)}),this.container.addChild(this._pointsView.container),this.addAttachHandles([this.allVisibleMapImages.on("change",t=>{t.added.forEach(e=>this._addMapImage(e)),t.removed.forEach(e=>this._removeMapImage(e))}),he(()=>this.layer.visibleSublayers,t=>{for(const e of this._kmlVisualData.allSublayers.values())e.visibility=0;for(const e of t){const i=this._kmlVisualData.allSublayers.get(e.id);i&&(i.visibility=1)}this._refreshCollections()})]),this._updatingHandles.addPromise(this._fetchService(this._fetchController.signal)),this._imageReprojector=new f}detach(){this._fetchController=pe(this._fetchController),this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView=k(this._polygonsView),this._polylinesView=k(this._polylinesView),this._pointsView=k(this._pointsView),this._imageReprojector=k(this._imageReprojector)}viewChange(){this._polygonsView.viewChange(),this._polylinesView.viewChange(),this._pointsView.viewChange()}moveEnd(){}isUpdating(){return this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating}_addMapImage(t){var e,i;((e=this.view.spatialReference)!=null&&e.isWGS84||(i=this.view.spatialReference)!=null&&i.isWebMercator)&&this._imageReprojector.loadAndReprojectBitmapData(t.href,t.extent,this.view.spatialReference).then(r=>{const a=new ge(r.bitmapData);a.x=r.extent.xmin,a.y=r.extent.ymax,a.resolution=r.extent.width/r.bitmapData.width,a.rotation=t.rotation,this._mapImageContainer.addChild(a),this._bitmapIndex.set(t,a)})}async _getViewDependentUrl(t,e){const{viewFormat:i,viewBoundScale:r,httpQuery:a}=t;if(i!=null){if(e==null)throw new Error("Loading this network link requires a view state.");let s;if(await ce(),r!=null&&r!==1){const _=new U(e.extent);_.expand(r),s=_}else s=e.extent;s=L(s,A.WGS84);const o=L(s,A.WebMercator),c=s.xmin,h=s.xmax,p=s.ymin,n=s.ymax,l=e.size[0]*e.pixelRatio,d=e.size[1]*e.pixelRatio,u=Math.max(o.width,o.height),m={"[bboxWest]":c.toString(),"[bboxEast]":h.toString(),"[bboxSouth]":p.toString(),"[bboxNorth]":n.toString(),"[lookatLon]":s.center.x.toString(),"[lookatLat]":s.center.y.toString(),"[lookatRange]":u.toString(),"[lookatTilt]":"0","[lookatHeading]":e.rotation.toString(),"[lookatTerrainLon]":s.center.x.toString(),"[lookatTerrainLat]":s.center.y.toString(),"[lookatTerrainAlt]":"0","[cameraLon]":s.center.x.toString(),"[cameraLat]":s.center.y.toString(),"[cameraAlt]":u.toString(),"[horizFov]":"60","[vertFov]":"60","[horizPixels]":l.toString(),"[vertPixels]":d.toString(),"[terrainEnabled]":"0","[clientVersion]":de,"[kmlVersion]":"2.2","[clientName]":"ArcGIS API for JavaScript","[language]":"en-US"},y=_=>{for(const P in _){let S;for(S in m)_[P]=_[P].replace(S,m[S])}},V=B(i);y(V);let v={};a!=null&&(v=B(a),y(v));const I=ue(t.href);return I.query={...I.query,...V,...v},`${I.path}?${me(V)}`}return t.href}async _fetchService(t){const e=new W;await this._loadVisualData(this.layer.url,e,t),this._kmlVisualData=e,this._refreshCollections()}_refreshCollections(){this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll(),this.allVisiblePoints.addMany(this._kmlVisualData.allPoints.filter(t=>this._isSublayerVisible(t.sublayerId)).map(({item:t})=>t)),this.allVisiblePolylines.addMany(this._kmlVisualData.allPolylines.filter(t=>this._isSublayerVisible(t.sublayerId)).map(({item:t})=>t)),this.allVisiblePolygons.addMany(this._kmlVisualData.allPolygons.filter(t=>this._isSublayerVisible(t.sublayerId)).map(({item:t})=>t)),this.allVisibleMapImages.addMany(this._kmlVisualData.allMapImages.filter(t=>this._isSublayerVisible(t.sublayerId)).map(({item:t})=>t))}_isSublayerVisible(t){const e=this._kmlVisualData.allSublayers.get(t);return!!(e!=null&&e.visibility)&&(e.parentFolderId===-1||this._isSublayerVisible(e.parentFolderId))}_loadVisualData(t,e,i){return this._fetchParsedKML(t,i).then(async r=>{var a;for(const s of r.sublayers){e.allSublayers.set(s.id,s);const o=s.points?await j(s.points):[],c=s.polylines?await j(s.polylines):[],h=s.polygons?await j(s.polygons):[],p=((a=s.mapImages)==null?void 0:a.map(n=>b.fromJSON(n)))??[];if(e.allPoints.push(...o.map(n=>({item:n,sublayerId:s.id}))),e.allPolylines.push(...c.map(n=>({item:n,sublayerId:s.id}))),e.allPolygons.push(...h.map(n=>({item:n,sublayerId:s.id}))),e.allMapImages.push(...p.map(n=>({item:n,sublayerId:s.id}))),s.networkLink){const n=await this._getViewDependentUrl(s.networkLink,this.view.state);await this._loadVisualData(n,e,i)}}})}_fetchParsedKML(t,e){return ke(t,this.layer.spatialReference,this.layer.refreshInterval,e).then(i=>Me(i.data))}_removeMapImage(t){const e=this._bitmapIndex.get(t);e&&(this._mapImageContainer.removeChild(e),this._bitmapIndex.delete(t))}};g([w()],x.prototype,"_pointsView",void 0),g([w()],x.prototype,"_polylinesView",void 0),g([w()],x.prototype,"_polygonsView",void 0),g([w()],x.prototype,"updating",void 0),x=g([J("esri.views.2d.layers.KMLLayerView2D")],x);const Te=x,Ke=Object.freeze(Object.defineProperty({__proto__:null,default:Te},Symbol.toStringTag,{value:"Module"}));export{Ke as K,Be as S,Me as d,ke as g,K as j};
