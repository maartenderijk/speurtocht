import{ar as T,af as v,cs as g,hB as S,hC as Y,hD as z,hE as $,hF as P,s as p,e as O,ae as J,b0 as H,hG as B,f5 as Z,b3 as K,dP as ee,dT as b,aO as C,dQ as te,bH as ae,eH as re,dX as ne,n as k,hH as N,da as M}from"./index-CRroVR8n.js";import{s as se,u as oe}from"./featureConversionUtils-B9mEzuoj.js";import{f as ie,u as ue}from"./executeQueryForSnapping-DV9-HQsM.js";import{x as le,j as ce}from"./queryUtils-BMFYm9hO.js";import{L as pe}from"./QueryEngine-6BZpQB3b.js";import{u as fe,E as me,N as de}from"./geojson-C_qmOPSA.js";import{g as ye}from"./sourceUtils-CWFMz45m.js";function x(r,t){if(r&&t){for(const e of r.children)if(e.localName in t){const a=t[e.localName];if(typeof a=="function"){const n=a(e);n&&x(e,n)}else x(e,a)}}}function*w(r,t){for(const e of r.children)if(e.localName in t){const a=t[e.localName];typeof a=="function"?yield a(e):yield*w(e,a)}}const R="xlink:href",F="2.0.0",I="__esri_wfs_id__",he="wfs-layer:getWFSLayerTypeInfo-error",ge="wfs-layer:empty-service",L="wfs-layer:feature-type-not-found",we="wfs-layer:geojson-not-supported",xe="wfs-layer:kvp-encoding-not-supported",Fe="wfs-layer:malformed-json",U="wfs-layer:unknown-geometry-type",_e="wfs-layer:unknown-field-type",Te="wfs-layer:unsupported-spatial-reference",be="wfs-layer:unsupported-wfs-version";async function Be(r,t){const e=Se((await T(r,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetCapabilities",VERSION:F,...t==null?void 0:t.customParameters},signal:t==null?void 0:t.signal})).data);return Ee(r,e),e}function Se(r){const t=V(r);Le(t),Q(t);const e=t.firstElementChild,a=Y($e(e));return{operations:Re(e),get featureTypes(){return Array.from(a())},readFeatureTypes:a}}const Ce=["json","application/json","geojson","application/json; subtype=geojson","application/geo+json"];function A(r){for(const t of Ce){const e=r.findIndex(a=>a.toLowerCase()===t);if(e>=0)return r[e]}return null}function Re(r){let t=!1;const e={GetCapabilities:{url:""},DescribeFeatureType:{url:""},GetFeature:{url:"",outputFormat:null,supportsPagination:!1}},a=[],n=[];if(x(r,{OperationsMetadata:{Parameter:s=>{if(s.getAttribute("name")==="outputFormat")return{AllowedValues:{Value:({textContent:o})=>{o&&a.push(o)}}}},Operation:s=>{switch(s.getAttribute("name")){case"GetCapabilities":return{DCP:{HTTP:{Get:o=>{e.GetCapabilities.url=o.getAttribute(R)}}}};case"DescribeFeatureType":return{DCP:{HTTP:{Get:o=>{e.DescribeFeatureType.url=o.getAttribute(R)}}}};case"GetFeature":return{DCP:{HTTP:{Get:o=>{e.GetFeature.url=o.getAttribute(R)}}},Parameter:o=>{if(o.getAttribute("name")==="outputFormat")return{AllowedValues:{Value:({textContent:i})=>{i&&n.push(i)}}}}}}},Constraint:s=>{switch(s.getAttribute("name")){case"KVPEncoding":return{DefaultValue:o=>{t=o.textContent.toLowerCase()==="true"}};case"ImplementsResultPaging":return{DefaultValue:o=>{e.GetFeature.supportsPagination=o.textContent.toLowerCase()==="true"}}}}}}),e.GetFeature.outputFormat=A(n)??A(a),!t)throw new p(xe,"WFS service doesn't support key/value pair (KVP) encoding");if(e.GetFeature.outputFormat==null)throw new p(we,"WFS service doesn't support GeoJSON output format");return e}function Ee(r,t){z(r)&&($(r,t.operations.DescribeFeatureType.url,!0)&&(t.operations.DescribeFeatureType.url=P(t.operations.DescribeFeatureType.url)),$(r,t.operations.GetFeature.url,!0)&&(t.operations.GetFeature.url=P(t.operations.GetFeature.url)))}function j(r){var e,a,n;const t=parseInt(((n=(a=(e=r.textContent)==null?void 0:e.match(/(?<wkid>\d+$)/i))==null?void 0:a.groups)==null?void 0:n.wkid)??"",10);if(!Number.isNaN(t))return t}function $e(r){return w(r,{FeatureTypeList:{FeatureType:t=>{const e={typeName:"undefined:undefined",name:"",title:"",description:"",extent:null,namespacePrefix:"",namespaceUri:"",defaultSpatialReference:4326,supportedSpatialReferences:[]},a=new Set;return x(t,{Name:n=>{const{name:s,prefix:o}=_(n.textContent);e.typeName=`${o}:${s}`,e.name=s,e.namespacePrefix=o,e.namespaceUri=n.lookupNamespaceURI(o)},Abstract:n=>{e.description=n.textContent},Title:n=>{e.title=n.textContent},WGS84BoundingBox:n=>{e.extent=K.fromJSON(Pe(n))},DefaultCRS:n=>{const s=j(n);s&&(e.defaultSpatialReference=s,a.add(s))},OtherCRS:n=>{const s=j(n);s&&a.add(s)}}),e.title||(e.title=e.name),a.add(4326),e.supportedSpatialReferences.push(...a),e}}})}function Pe(r){let t,e,a,n;for(const s of r.children)switch(s.localName){case"LowerCorner":[t,e]=s.textContent.split(" ").map(o=>Number.parseFloat(o));break;case"UpperCorner":[a,n]=s.textContent.split(" ").map(o=>Number.parseFloat(o))}return{xmin:t,ymin:e,xmax:a,ymax:n,spatialReference:ee}}function ke(r,t,e){return S(r,a=>e?a.name===t&&a.namespaceUri===e:a.typeName===t||a.name===t)}async function Ze(r,t,e,a={}){const{featureType:n,extent:s}=await Ne(r,t,e,a),{spatialReference:o}=W(r.operations.GetFeature.url,n,a.spatialReference),{fields:i,geometryType:u,swapXY:c,objectIdField:l,geometryField:f}=await Ie(r,n,o,a);return{url:r.operations.GetCapabilities.url,name:n.name,namespaceUri:n.namespaceUri,fields:i,geometryField:f,geometryType:u,objectIdField:l,spatialReference:a.spatialReference??new v({wkid:n.defaultSpatialReference}),extent:s,swapXY:c,wfsCapabilities:r,customParameters:a.customParameters}}async function Ne(r,t,e,a={}){const n=r.readFeatureTypes(),s=t?ke(n,t,e):n.next().value,{spatialReference:o=new v({wkid:s==null?void 0:s.defaultSpatialReference})}=a;if(s==null)throw t?new p(L,`The type '${t}' could not be found in the service`):new p(ge,"The service is empty");let i=s.extent;if(i&&!O(i.spatialReference,o))try{await J(i.spatialReference,o,void 0,a),i=H(i,o)}catch{throw new p(Te,"Projection not supported")}return{extent:i,spatialReference:o,featureType:s}}async function Ie(r,t,e,a={}){var d,m,y;const{typeName:n}=t,[s,o]=await Promise.allSettled([qe(r.operations.DescribeFeatureType.url,n,a),je(r,n,e,a)]),i=h=>new p(he,`An error occurred while getting info about the feature type '${n}'`,{error:h});if(s.status==="rejected")throw i(s.reason);if(o.status==="rejected")throw i(o.reason);const{fields:u,errors:c}=s.value??{},l=((d=s.value)==null?void 0:d.geometryType)||((m=o.value)==null?void 0:m.geometryType),f=((y=o.value)==null?void 0:y.swapXY)??!1;if(l==null)throw new p(U,`The geometry type could not be determined for type '${n}`,{typeName:n,geometryType:l,fields:u,errors:c});return{...Ae(u??[]),geometryType:l,swapXY:f}}function Ae(r){const t=r.find(a=>a.type==="geometry");let e=r.find(a=>a.type==="oid");return r=r.filter(a=>a.type!=="geometry"),e||(e=new g({name:I,type:"oid",alias:I}),r.unshift(e)),{geometryField:(t==null?void 0:t.name)??null,objectIdField:e.name,fields:r}}async function je(r,t,e,a={}){var c;let n,s=!1;const[o,i]=await Promise.all([E(r.operations.GetFeature.url,t,e,r.operations.GetFeature.outputFormat,{...a,count:1}),T(r.operations.GetFeature.url,{responseType:"text",query:D(t,e,void 0,{...a,count:1}),signal:a==null?void 0:a.signal})]),u=o.type==="FeatureCollection"&&((c=o.features[0])==null?void 0:c.geometry);if(u){let l;switch(n=Z.fromJSON(fe(u.type)),u.type){case"Point":l=u.coordinates;break;case"LineString":case"MultiPoint":l=u.coordinates[0];break;case"MultiLineString":case"Polygon":l=u.coordinates[0][0];break;case"MultiPolygon":l=u.coordinates[0][0][0]}const f=/<[^>]*pos[^>]*> *(-?\d+(?:\.\d+)?) (-?\d+(?:\.\d+)?)/.exec(i.data);if(f){const d=l[0].toFixed(3),m=l[1].toFixed(3),y=parseFloat(f[1]).toFixed(3);d===parseFloat(f[2]).toFixed(3)&&m===y&&(s=!0)}}return{geometryType:n,swapXY:s}}async function qe(r,t,e){return Ge(t,(await T(r,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"DescribeFeatureType",VERSION:F,TYPENAME:t,TYPENAMES:t,...e==null?void 0:e.customParameters},signal:e==null?void 0:e.signal})).data)}function Ge(r,t){const{name:e}=_(r),a=V(t);Q(a);const n=S(w(a.firstElementChild,{element:s=>s}),s=>s.getAttribute("name")===e);if(n!=null){const s=n.getAttribute("type"),o=s?S(w(a.firstElementChild,{complexType:i=>i}),i=>i.getAttribute("name")===_(s).name):S(w(n,{complexType:i=>i}),()=>!0);if(o)return Oe(o)}throw new p(L,`Type '${r}' not found in document`,{document:new XMLSerializer().serializeToString(a)})}const ve=new Set(["objectid","fid"]);function Oe(r){const t=[],e=[];let a;const n=w(r,{complexContent:{extension:{sequence:{element:s=>s}}}});for(const s of n){const o=s.getAttribute("name");if(!o)continue;let i,u;if(s.hasAttribute("type")?i=_(s.getAttribute("type")).name:x(s,{simpleType:{restriction:f=>(i=_(f.getAttribute("base")).name,{maxLength:d=>{u=+d.getAttribute("value")}})}}),!i)continue;const c=s.getAttribute("nillable")==="true";let l=!1;switch(i.toLowerCase()){case"integer":case"nonpositiveinteger":case"negativeinteger":case"long":case"int":case"short":case"byte":case"nonnegativeinteger":case"unsignedlong":case"unsignedint":case"unsignedshort":case"unsignedbyte":case"positiveinteger":e.push(new g({name:o,alias:o,type:"integer",nullable:c,length:b("integer")}));break;case"float":case"double":case"decimal":e.push(new g({name:o,alias:o,type:"double",nullable:c,length:b("double")}));break;case"boolean":case"string":case"gyearmonth":case"gyear":case"gmonthday":case"gday":case"gmonth":case"anyuri":case"qname":case"notation":case"normalizedstring":case"token":case"language":case"idrefs":case"entities":case"nmtoken":case"nmtokens":case"name":case"ncname":case"id":case"idref":case"entity":case"duration":case"time":e.push(new g({name:o,alias:o,type:"string",nullable:c,length:u??b("string")}));break;case"datetime":case"date":e.push(new g({name:o,alias:o,type:"date",nullable:c,length:u??b("date")}));break;case"pointpropertytype":a="point",l=!0;break;case"multipointpropertytype":a="multipoint",l=!0;break;case"curvepropertytype":case"multicurvepropertytype":case"multilinestringpropertytype":a="polyline",l=!0;break;case"surfacepropertytype":case"multisurfacepropertytype":case"multipolygonpropertytype":a="polygon",l=!0;break;case"geometrypropertytype":case"multigeometrypropertytype":l=!0,t.push(new p(U,`geometry type '${i}' is not supported`,{type:new XMLSerializer().serializeToString(r)}));break;default:t.push(new p(_e,`Unknown field type '${i}'`,{type:new XMLSerializer().serializeToString(r)}))}l&&e.push(new g({name:o,alias:o,type:"geometry",nullable:c}))}for(const s of e)if(s.type==="integer"&&!s.nullable&&ve.has(s.name.toLowerCase())){s.type="oid";break}return{geometryType:a,fields:e,errors:t}}async function E(r,t,e,a,n){let{data:s}=await T(r,{responseType:"text",query:D(t,e,a,n),signal:n==null?void 0:n.signal});s=s.replaceAll(/": +(-?\d+),(\d+)(,)?/g,'": $1.$2$3');try{return JSON.parse(s)}catch(o){throw new p(Fe,"Error while parsing the response",{response:s,error:o})}}function D(r,t,e,a){const n=typeof t=="number"?t:t.wkid;return{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:F,TYPENAMES:r,OUTPUTFORMAT:e,SRSNAME:"EPSG:"+n,STARTINDEX:a==null?void 0:a.startIndex,COUNT:a==null?void 0:a.count,...a==null?void 0:a.customParameters}}async function Me(r,t,e){const a=await T(r,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:F,TYPENAMES:t,RESULTTYPE:"hits",...e==null?void 0:e.customParameters},signal:e==null?void 0:e.signal}),n=/numberMatched=["'](?<numberMatched>\d+)["']/gi.exec(a.data);if(n!=null&&n.groups)return+n.groups.numberMatched}function V(r){return new DOMParser().parseFromString(r.trim(),"text/xml")}function _(r){const[t,e]=r.split(":");return{prefix:e?t:"",name:e??t}}function Le(r){var e;const t=(e=r.firstElementChild)==null?void 0:e.getAttribute("version");if(t&&t!==F)throw new p(be,`Unsupported WFS version ${t}. Supported version: ${F}`)}function Q(r){let t="",e="";if(x(r.firstElementChild,{Exception:a=>(t=a.getAttribute("exceptionCode"),{ExceptionText:n=>{e=n.textContent}})}),t)throw new p(`wfs-layer:${t}`,e)}function W(r,t,e){const a={wkid:t.defaultSpatialReference},n=(e==null?void 0:e.wkid)!=null?{wkid:e.wkid}:a;return{spatialReference:n,getFeatureSpatialReference:B(r)||n.wkid&&t.supportedSpatialReferences.includes(n.wkid)?{wkid:n.wkid}:{wkid:t.defaultSpatialReference}}}const q="esri.layers.WFSLayer";class Ue{constructor(){this._customParameters=null,this._queryEngine=null,this._supportsPagination=!0}destroy(){var t;(t=this._queryEngine)==null||t.destroy(),this._queryEngine=null}async load(t,e={}){const{getFeatureUrl:a,getFeatureOutputFormat:n,fields:s,geometryType:o,featureType:i,maxRecordCount:u,maxTotalRecordCount:c,maxPageCount:l,objectIdField:f,customParameters:d}=t,{spatialReference:m,getFeatureSpatialReference:y}=W(a,i,t.spatialReference);try{await le(y,m)}catch{throw new p("unsupported-projection","Projection not supported",{inSpatialReference:y,outSpatialReference:m})}C(e),this._customParameters=d,this._featureType=i,this._fieldsIndex=te.fromLayerJSON({fields:s,dateFieldsTimeReference:s.some(X=>X.type==="esriFieldTypeDate")?{timeZoneIANA:ae}:null}),this._geometryType=o,this._getFeatureUrl=a,this._getFeatureOutputFormat=n,this._getFeatureSpatialReference=y,this._maxRecordCount=u,this._maxTotalRecordCount=c,this._maxPageCount=l,this._objectIdField=f,this._spatialReference=m;let h=await this._snapshotFeatures(e);if(h.errors.length>0&&(this._supportsPagination=!1,h=await this._snapshotFeatures(e),h.errors.length>0))throw h.errors[0];return this._queryEngine=new pe({fieldsIndex:this._fieldsIndex,geometryType:o,hasM:!1,hasZ:!1,objectIdField:f,spatialReference:m,timeInfo:null,featureStore:new ie({geometryType:o,hasM:!1,hasZ:!1})}),this._queryEngine.featureStore.addMany(h.features),{warnings:G(h),extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async applyEdits(){throw new p("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(t,e.signal)}async queryFeatureCount(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(t,e.signal)}async queryObjectIds(t={},e={}){return await this._waitSnapshotComplete(),(await this._queryEngine.executeQueryForIds(t,e.signal)).filter(re)}async queryExtent(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(t,e.signal)}async querySnapping(t,e={}){return await this._waitSnapshotComplete(),ue(this._queryEngine,t,e.signal)}async queryAttributeBins(t,e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeAttributeBinsQuery(t,e.signal)}async refresh(t){var e;return this._customParameters=t.customParameters,this._maxRecordCount=t.maxRecordCount,this._maxTotalRecordCount=t.maxTotalRecordCount,this._maxPageCount=t.maxPageCount,(e=this._snapshotTask)==null||e.abort(),this._snapshotTask=ne(a=>this._snapshotFeatures({signal:a})),this._snapshotTask.promise.then(a=>{var n;this._queryEngine.featureStore.clear(),this._queryEngine.featureStore.addMany(a.features);for(const s of G(a))k.getLogger(q).warn(new N("wfs-layer:refresh-warning",s.message,s.details));(n=a.errors)!=null&&n.length&&k.getLogger(q).warn(new N("wfs-layer:refresh-error","Refresh completed with errors",{errors:a.errors}))},()=>{this._queryEngine.featureStore.clear()}),await this._waitSnapshotComplete(),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _snapshotFeatures(t){const e=t==null?void 0:t.signal,a=this._maxTotalRecordCount,n=this._maxPageCount,s=this._supportsPagination?await Me(this._getFeatureUrl,this._featureType.typeName,{customParameters:this._customParameters,signal:e}):void 0;let o=[];const i=[];if(s==null)try{o=await this._singleQuery(e)}catch(u){M(u)||i.push(u)}else{const u=Math.min(s,a),c=De(this,Math.max(1,Math.min(Math.ceil(u/this._maxRecordCount),n)),e);await Promise.allSettled(Array.from({length:10}).map(()=>Ve(c,o,i)))}return C(e),{features:o,totalRecordCount:s,maxTotalRecordCount:a,maxPageCount:n,errors:i}}async _singleQuery(t){const e=await E(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,signal:t});return this._processGeoJSON(e,{signal:t})}async _pageQuery(t,e){const a=t*this._maxRecordCount,n=await E(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,startIndex:a,count:this._maxRecordCount,signal:e});return this._processGeoJSON(n,{startIndex:a,signal:e})}_processGeoJSON(t,e){me(t,this._getFeatureSpatialReference.wkid);const{startIndex:a,signal:n}=e;C(n);const s=de(t,{geometryType:this._geometryType,hasZ:!1,objectIdField:this._objectIdField});if(!O(this._spatialReference,this._getFeatureSpatialReference))for(const i of s)i.geometry!=null&&(i.geometry=se(ce(oe(i.geometry,this._geometryType,!1,!1),this._getFeatureSpatialReference,this._spatialReference)));let o=a??1;for(const i of s){const u={};ye(this._fieldsIndex,u,i.attributes,!0),i.attributes=u,u[this._objectIdField]==null&&(i.objectId=u[this._objectIdField]=o++)}return s}}function*De(r,t,e){for(let a=0;a<t;a++)yield r._pageQuery(a,e)}async function Ve(r,t,e){let a=r.next();for(;!a.done;){try{const n=await a.value;t.push(...n)}catch(n){M(n)||e.push(n)}a=r.next()}}function G(r){const t=[];return r.totalRecordCount!=null&&(r.features.length<r.totalRecordCount&&t.push({name:"wfs-layer:maxRecordCount-too-low",message:`Could only fetch ${r.features.length} of ${r.totalRecordCount} in ${r.maxPageCount} queries. Try increasing the value of WFSLayer.maxRecordCount.`,details:{recordCount:r.features.length,totalRecordCount:r.totalRecordCount}}),r.totalRecordCount>r.maxTotalRecordCount&&t.push({name:"wfs-layer:large-dataset",message:`The number of ${r.totalRecordCount} features exceeds the maximum allowed of ${r.maxTotalRecordCount}.`,details:{recordCount:r.features.length,totalRecordCount:r.totalRecordCount,maxTotalRecordCount:r.maxTotalRecordCount}})),t}const Ke=Object.freeze(Object.defineProperty({__proto__:null,default:Ue},Symbol.toStringTag,{value:"Module"}));export{I as S,Ze as W,ke as Y,Ke as a,x as o,Be as v,Ae as z};
