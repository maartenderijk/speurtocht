import{eK as f,b4 as x}from"./index-CZ5hE8fp.js";import{w as G,j as d}from"./operatorOffset-BPzf_SIF.js";import{getSpatialReference as u,fromGeometry as y,toGeometry as p,fromGeometries as g}from"./jsonConverter-C0KAyFpw.js";import"./SimpleGeometryCursor-B92kdZ15.js";import"./ProjectionTransformation-C0DPS25h.js";const l={round:0,bevel:1,miter:2,square:3};function R(t,e,m={}){const{miterLimit:a=10,flattenError:s=0,joins:c="round",unit:r}=m,o=u(t);r&&o&&(e=f(e,r,o));const i=y(t),n=i.getSpatialReference();return p(G(i.getGeometry(),n,e,l[c],a,s),n)}function S(t,e,m={}){const{miterLimit:a=10,flattenError:s=0,joins:c="round",unit:r}=m,o=u(t);r&&o&&(e=f(e,r,o));const[i,n]=g(t);return d(i,n,e,l[c],a,s).map(j=>p(j,n)).filter(x)}export{R as execute,S as executeMany};
