const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/OperatorGeodesicBuffer-DoSMGFsU.js","assets/SimpleGeometryCursor-B92kdZ15.js","assets/ProjectionTransformation-D4HNpuWV.js","assets/index-BHVnKyhT.js","assets/GeometryCleaner-BEJM7I4l-BDj84PCy.js"])))=>i.map(i=>d[i]);
import{aP as a,cC as c,cE as f,cD as _}from"./index-BHVnKyhT.js";import{s as l}from"./SimpleGeometryCursor-B92kdZ15.js";let n;function m(){return!!n&&_()}async function E(){if(!m()){const[t,r]=await Promise.all([a(()=>import("./OperatorGeodesicBuffer-DoSMGFsU.js"),__vite__mapDeps([0,1,2,3,4])),a(()=>import("./ProjectionTransformation-D4HNpuWV.js").then(e=>e.bF),__vite__mapDeps([2,1,3])).then(e=>e.aG).then(({injectPe:e})=>e),c()]);n=new t.OperatorGeodesicBuffer,r(f)}}function d(t,r,e,o,u){return n.execute(t,r,e,o,u,!1,null)}function v(t,r,e,o,u,i){const s=n.executeMany(new l(t),r,e,o,u,!1,i,null);return Array.from(s)}function h(){return n.supportsCurves()}export{h as a,v as c,d as i,m as s,E as u};
