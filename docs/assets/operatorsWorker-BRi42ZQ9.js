const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/disjointOperator-TkkXGLO-.js","assets/ProjectionTransformation-C0DPS25h.js","assets/SimpleGeometryCursor-B92kdZ15.js","assets/index-CZ5hE8fp.js","assets/jsonConverter-C0KAyFpw.js","assets/intersectsOperator-bo__z-Lp.js","assets/OperatorIntersects-CIlFPChr.js","assets/touchesOperator-Dr_CDJIC.js","assets/OperatorTouches-bqK8f234.js","assets/crossesOperator-CymU0ODf.js","assets/OperatorCrosses-nyPMW-XO.js","assets/withinOperator-DudZePNx.js","assets/OperatorWithin-0LkQb-JK.js","assets/containsOperator-DgX6OOzI.js","assets/overlapsOperator-_WAoQBtT.js","assets/OperatorOverlaps-C0DNc55v.js","assets/OperatorGeodeticLength-B0Tqpu4h.js","assets/SceneLayerWorker-Cckhcvw7.js","assets/MeshLocalVertexSpace-Bx8kBGN4.js","assets/vec3-DIxrE7_X.js","assets/projectVectorToVector-BFDgKzVd.js","assets/projectPointToVector-CXmjT_EK.js","assets/sphere-CRC76HRT.js","assets/mat3f64-q3fE-ZOt.js","assets/plane-BuUSpIe6.js","assets/mat4f64-Dk4dwAN8.js","assets/quatf64-aQ5IuZRd.js","assets/I3SBinaryReader-CxQ1AHuB.js","assets/VertexAttribute-Cq4MnHjR.js","assets/edgeUtils-CqhMqnzW.js","assets/floatRGBA-C51THpw8.js","assets/NormalAttribute.glsl-UkT5JbRo.js","assets/glsl-BH37Aalp.js","assets/ShaderOutput-DnYY5J1_.js","assets/BindType-BBwFZqyN.js","assets/orientedBoundingBox-BtOFE2u5.js","assets/quat-DD8E2tgP.js","assets/spatialReferenceEllipsoidUtils-Cy7dvIfE.js","assets/computeTranslationToOriginAndRotation-C98gxicK.js","assets/popupUtils-RtpvrFP8.js","assets/associatedFeatureServiceUtils-CTAY0Iw2.js","assets/SketchOptions-Dp7013_g.js","assets/geodesicUtils-Bo7dpEsC.js","assets/quantityUtils-BDGTC0If.js","assets/utils-TJf1IAI3.js","assets/quantizationUtils-B-YtPy0C.js","assets/utils-C5ChWs3W.js","assets/FeatureLayerSource-CQJ15cMQ.js","assets/meshVertexSpaceUtils-sJutOLTa.js","assets/MeshTransform-XLhiuaIp.js","assets/axisAngleDegrees-CMJJgKzc.js","assets/editingSupport-DbyPi0Yy.js","assets/query-B2fajnRZ.js","assets/pbfQueryUtils-CIuHb6wh.js","assets/pbf-Cbb74TnL.js","assets/memoryEstimations-B6bMMgTZ.js","assets/OptimizedFeatureSet-xqZqApCH.js","assets/executeQueryJSON-CyUL5YHm.js","assets/featureConversionUtils-C-UuyJ2o.js","assets/layersCreator-CwNUAFhf.js","assets/loadUtils-prAUa_Li.js","assets/fetchService-BG90PrCX.js","assets/lazyLayerLoader-KJeahOQG.js","assets/portalLayers-CWZcHeOF.js","assets/saveUtils-9-aatXow.js","assets/multiOriginJSONSupportUtils-C0wm8_Yw.js","assets/ImageryTileLayerView2D-Cp4vZYl0.js","assets/RasterVFDisplayObject-CeZiJa4n.js","assets/VertexArrayObject-DulQagr-.js","assets/VertexElementDescriptor-BLyltQyJ.js","assets/dataUtils-BlZpSRMY.js","assets/WGLContainer-umnTRQgX.js","assets/dataViewUtils-DDgDo3Ji.js","assets/ProgramTemplate-rbh8Cw0m.js","assets/vec3f32-nZdmKIgz.js","assets/Container-Bcoanpcy.js","assets/config-CLlNJHr5.js","assets/earcut-D9gy186-.js","assets/LayerView-Chqv9rkn.js","assets/layerViewUtils-tYn3XfT9.js","assets/rasterUtils-B0norO3a.js","assets/VertexStream-BT9Fp2RX.js","assets/utils-DIAOpH-M.js","assets/FramebufferObject-BS2zNKUU.js","assets/TileContainer-Aj5RzmSu.js","assets/rasterProjectionHelper-BT_5mLlL.js","assets/timeSupport-gUG5X3lp.js","assets/RefreshableLayerView-COya1w-a.js","assets/RasterWorker-DZqg91-F.js","assets/_commonjsHelpers-DCkdB7M8.js","assets/colorUtils-Bb84aurD.js","assets/ElevationLayer-ChvFZDsr.js","assets/ByteSizeUnit-BsxeN7wM.js","assets/WorkerHandle-CJgnwr59.js","assets/editingTools-EfuM50aV.js","assets/interfaces-DJoTJPvA.js","assets/VerticalOffset.glsl-nxFChQKt.js","assets/Indices-BO17UEsP.js","assets/InterleavedLayout-CGwJTyBl.js","assets/BufferView-ELzrcGhc.js","assets/triangle-D7P68J2-.js","assets/lineSegment-DtbwHkxd.js","assets/renderState-BCfBO2Ll.js","assets/boundedPlane-Sh5RKEsn.js","assets/requestImageUtils-BKmBb2Nv.js","assets/TextureFormat-1mYWTFa-.js","assets/ShaderBuilder-CDN5UO2A.js","assets/triangulationUtils-CkoakwR3.js","assets/deduplicate-DeueG094.js","assets/RibbonLine.glsl-Ct5xCbtf.js","assets/HUDVisibility.glsl-C1JQbQqN.js","assets/doublePrecisionUtils-B0owpBza.js","assets/hydratedFeatures--kSrlhK2.js","assets/Octree-CLzm-FPy.js","assets/HUDMaterial-uJdmKsdM.js","assets/NestedMap-GuqgquCN.js","assets/RouteLayerInteraction-Cek9Qi9Z.js","assets/GraphicsLayer-RqVRw72V.js","assets/RouteLayerView2D-CVnlSjfl.js","assets/GraphicContainer-Sra4z3O6.js","assets/AGraphicContainer-C_7Pwz5T.js","assets/TechniqueInstance-hct1x6UA.js","assets/UpdateTracking2D-CZILwAxP.js","assets/BidiEngine-QXap_35O.js","assets/Rect-BDemx-Ly.js","assets/rasterizingUtils-DsNuqkbG.js","assets/FeatureCommandQueue-F5i1KWWH.js","assets/TechniqueType-uMFRS8dR.js","assets/GraphShaderModule-Cxli1lea.js","assets/QueueProcessor-CQsw5KsH.js","assets/GraphicsView2D-Bn0Sj1hX.js","assets/OverrideHelper-DoAu-g7T.js","assets/FeatureMetadata-ztY0VNuy.js","assets/queryUtils-CJ0lTcFl.js","assets/json-Wa8cmqdu.js","assets/timeSupport-BgyZAOwQ.js","assets/TimeOnly-Ci18p41_.js","assets/dehydratedFeatures-Db4BZh0G.js","assets/automaticLengthMeasurementUtils-B_o67OVU.js","assets/memoize-DmxaQ-k8.js","assets/unitFormatUtils-COgLWxSq.js","assets/geodesicLengthMeasurementUtils-BhaZVxue.js","assets/geometryEngineBase-B0ZyeKAX.js","assets/hydrated-BIS2vI8R.js","assets/glUtil-DJ9lZRuc.js","assets/automaticAreaMeasurementUtils-uPfkW5zz.js","assets/PointSnappingHint-Cm2GTmUA.js","assets/editPlaneUtils-DoD4F7IV.js","assets/ReactiveSet-DfEedOiQ.js","assets/SelectedVertexTooltipInfo-CzSqX3CU.js","assets/TranslateTooltipInfo-nmsVE5S0.js","assets/utils-BR4qyBCi.js","assets/cimSymbolUtils-DP5t_0_a.js","assets/ExtentScaleTooltipInfo-DBqB0SKb.js","assets/GraphicManipulator-CmdVFDt5.js","assets/drapedUtils-Cvc2v3ls.js","assets/KMLLayerView2D-CL7PxVew.js","assets/BitmapTechnique-FelUEzfR.js","assets/BitmapContainer-Dc-pd9Nr.js","assets/MaterialPrograms-DEzuEycB.js","assets/webglDeps-CoxDUCLs.js","assets/testSVGPremultipliedAlpha-BbAHqCev.js","assets/FeatureLayerView2D-ZyGXmX7m.js","assets/AttributeBinsFeatureSet-p8gZTTe4.js","assets/AttributeBinsQuery-B9VuddV3.js","assets/FixedIntervalBinParameters-3A9itgyW.js","assets/CircularArray-CujHzHWW.js","assets/SDFHelper-CDW2fkgD.js","assets/parquet-I3iNeojh.js","assets/floorFilterUtils-DZ5C6FQv.js","assets/knowledgegraph-HD3Ztkw5.js","assets/arcade-CHpBsXSM.js","assets/unitConversion-DvsxlVIB.js","assets/ImmutableArray-BPVd6ESQ.js","assets/shared-D_Nxpy4X.js","assets/number-BlpqCy9A.js","assets/WhereClause-jntLSwg_.js","assets/portalUtils-C2uc9csM.js","assets/executeQueryForSnapping-BOuSB6Le.js","assets/PooledRBush-oz9YIZ90.js","assets/optimizedFeatureQueryEngineAdapter-COaH52Vl.js","assets/QueryEngine-HPCo_Ifv.js","assets/WhereClauseCache-u31UYV3y.js","assets/SnappingCandidate-DGkpYqI6.js","assets/MapImageLayerView2D-OwTecdj0.js","assets/HighlightGraphicContainer-DWonIVq-.js","assets/ExportStrategy-DSF81i7E.js","assets/MapServiceLayerViewHelper-DGjyMrRF.js","assets/MemorySourceWorker-ChF4nRM3.js","assets/sourceUtils-GGRhVtd5.js","assets/date-Ctp1FiBW.js","assets/MediaLayerView2D-BYNdLNMt.js","assets/enums-BRzLM11V.js","assets/GridShader-CsHPPPpR.js","assets/PieChartMeshWriter-Cf6nbt0C.js","assets/libtess-BiFx7RFN.js","assets/utils-Ck2ntZmb.js","assets/grouping-B8fxpKGc.js","assets/OverlayContainer-DJ4KgPmM.js","assets/utils-ehcGqGxa.js","assets/FeaturePipelineWorker-Cmb3otUT.js","assets/MeshWriterRegistry-B3wPmtZE.js","assets/operatorGeodeticDensify-Dhx8tMYX.js","assets/geodeticCurveType-CirnHLSB.js","assets/geojson-HjMzdW8i.js","assets/PointCloudWorker-D50Mz1no.js","assets/uploadAssets-Bm3w5uHu.js","assets/meshFeatureAttributes-LMnxYEsW.js","assets/SourceLayerData-CF2sV2H7.js","assets/VideoLayerView2D-DEIaHe02.js","assets/webdocSaveUtils-DFbZ4pKX.js","assets/basemapUtils-2_DsHAZ4.js","assets/resourceUtils-ByzpHlY_.js","assets/WFSSourceWorker-Vw0IgHgy.js","assets/WMSLayerView2D-DHx1RA8Q.js","assets/operators-AYNyC_kI.js","assets/apiConverter-Cdv1qe65.js","assets/operatorGeodesicBuffer-CBB35SIm.js","assets/operatorBuffer-BCpyPS5b.js","assets/GeometryCleaner-BEJM7I4l-ClFIWRfF.js","assets/operatorConvexHull-BOUIyiaQ.js","assets/operatorIntersection-k8N2OAaT.js","assets/operatorOffset-BPzf_SIF.js","assets/operatorSimplify-DRYQE6ez.js","assets/operatorUnion-Ck4VRSTC.js","assets/MeshComponent-DqR0sDgs.js","assets/meshProperties-C4iW0Ukm.js","assets/MeshVertexAttributes-DlqztFLB.js","assets/vec4-ChKGoyBc.js","assets/loader-BAY1fLD4.js","assets/objectResourceUtils-C5BfyO9u.js","assets/devEnvironmentUtils-CnNDiFMM.js","assets/DefaultMaterial-C2lA75ND.js","assets/vertexSpaceConversion-Ce9f_rd3.js","assets/featureLayerUtils-aBSE0WcX.js","assets/intersectionOperator-scIS9iTk.js","assets/unionOperator-CO0BiYza.js","assets/lengthOperator-1ASLF-ry.js","assets/bufferOperator-CuJjl5x5.js","assets/geodesicBufferOperator-DXVTz717.js","assets/offsetOperator-xtz1k9BY.js","assets/simplifyOperator-CIlWJQze.js","assets/convexHullOperator-BxBbvG50.js"])))=>i.map(i=>d[i]);
import{aP as a,ca as c}from"./index-CZ5hE8fp.js";function _(t,e){let o;return{loaded:!1,load:()=>o??(o=e().then(n=>{p[t]={loaded:!0,execute:n}}))}}function s(t){return t==null?null:t.toJSON()}const p={disjoint:_("disjoint",()=>a(()=>import("./disjointOperator-TkkXGLO-.js"),__vite__mapDeps([0,1,2,3,4])).then(t=>t.execute)),intersects:_("intersects",()=>a(()=>import("./intersectsOperator-bo__z-Lp.js"),__vite__mapDeps([5,6,1,2,3,4])).then(t=>t.execute)),touches:_("touches",()=>a(()=>import("./touchesOperator-Dr_CDJIC.js"),__vite__mapDeps([7,8,1,2,3,4])).then(t=>t.execute)),crosses:_("crosses",()=>a(()=>import("./crossesOperator-CymU0ODf.js"),__vite__mapDeps([9,10,1,2,3,4])).then(t=>t.execute)),within:_("within",()=>a(()=>import("./withinOperator-DudZePNx.js"),__vite__mapDeps([11,12,1,2,3,4])).then(t=>t.execute)),contains:_("contains",()=>a(()=>import("./containsOperator-DgX6OOzI.js"),__vite__mapDeps([13,1,2,3,4])).then(t=>t.execute)),overlaps:_("overlaps",()=>a(()=>import("./overlapsOperator-_WAoQBtT.js"),__vite__mapDeps([14,15,1,2,3,4])).then(t=>t.execute)),equals:_("equals",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-B0Tqpu4h.js").then(e=>e.J),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o)=>t.execute(c(e),c(o))}),relate:_("relate",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-B0Tqpu4h.js").then(e=>e.$),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o,n)=>t.execute(c(e),c(o),n)}),intersection:_("intersection",()=>a(()=>import("./intersectionOperator-scIS9iTk.js"),__vite__mapDeps([235,3,221,2,1,4])).then(t=>t.execute)),union:_("union",()=>a(()=>import("./unionOperator-CO0BiYza.js"),__vite__mapDeps([236,224,2,1,3,4])).then(t=>t.executeMany)),difference:_("difference",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-B0Tqpu4h.js").then(e=>e.F),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o)=>s(t.execute(c(e),c(o)))}),symmetricDifference:_("symmetricDifference",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-B0Tqpu4h.js").then(e=>e.a0),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o)=>s(t.execute(c(e),c(o)))}),clip:_("clip",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-B0Tqpu4h.js").then(e=>e.z),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o)=>s(t.execute(c(e),c(o)))}),cut:_("cut",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-B0Tqpu4h.js").then(e=>e.A),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o)=>t.execute(c(e),c(o)).map(n=>s(n))}),area:_("area",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-B0Tqpu4h.js").then(n=>n.x),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convertFromSpatialReferenceUnit:e,toAreaUnit:o}=await a(async()=>{const{convertFromSpatialReferenceUnit:n,toAreaUnit:r}=await import("./unitConversion-DvsxlVIB.js").then(i=>i.e);return{convertFromSpatialReferenceUnit:n,toAreaUnit:r}},__vite__mapDeps([172,3]));return(n,r)=>{const i=t.execute(c(n));return e(n.spatialReference,o(r),i)}}),geodeticArea:_("geodeticArea",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-B0Tqpu4h.js").then(r=>r.Q),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convert:e,squareMeters:o,toAreaUnit:n}=await a(async()=>{const{convert:r,squareMeters:i,toAreaUnit:u}=await import("./unitConversion-DvsxlVIB.js").then(E=>E.e);return{convert:r,squareMeters:i,toAreaUnit:u}},__vite__mapDeps([172,3]));return await t.load(),(r,i)=>{const u=t.execute(c(r));return e(o,n(i),u)}}),length:_("length",async()=>{const t=await a(()=>import("./lengthOperator-1ASLF-ry.js"),__vite__mapDeps([237,3,4,1,2])),{convertFromSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertFromSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-DvsxlVIB.js").then(i=>i.e);return{convertFromSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([172,3]));return(n,r)=>{const i=t.execute(n);return e(n.spatialReference,o(r),i)}}),geodeticLength:_("geodeticLength",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-B0Tqpu4h.js").then(r=>r.Y),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convert:e,meters:o,toLengthUnit:n}=await a(async()=>{const{convert:r,meters:i,toLengthUnit:u}=await import("./unitConversion-DvsxlVIB.js").then(E=>E.e);return{convert:r,meters:i,toLengthUnit:u}},__vite__mapDeps([172,3]));return await t.load(),(r,i)=>{const u=t.execute(c(r));return e(o,n(i),u)}}),distance:_("distance",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-B0Tqpu4h.js").then(n=>n.H),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convertFromSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertFromSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-DvsxlVIB.js").then(i=>i.e);return{convertFromSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([172,3]));return(n,r,i)=>{const u=t.execute(c(n),c(r));return e(n.spatialReference,o(i),u)}}),densify:_("densify",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-B0Tqpu4h.js").then(n=>n.E),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertToSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-DvsxlVIB.js").then(i=>i.e);return{convertToSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([172,3]));return(n,r,i)=>(r=e(o(i),n.spatialReference,r),s(t.execute(c(n),r)))}),geodeticDensify:_("geodeticDensify",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-B0Tqpu4h.js").then(r=>r.X),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convert:e,meters:o,toLengthUnit:n}=await a(async()=>{const{convert:r,meters:i,toLengthUnit:u}=await import("./unitConversion-DvsxlVIB.js").then(E=>E.e);return{convert:r,meters:i,toLengthUnit:u}},__vite__mapDeps([172,3]));return await t.load(),(r,i,u)=>(i=e(n(u),o,i),s(t.execute(c(r),i)))}),generalize:_("generalize",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-B0Tqpu4h.js").then(n=>n.N),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertToSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-DvsxlVIB.js").then(i=>i.e);return{convertToSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([172,3]));return(n,r,i,u)=>(r=e(o(i),n.spatialReference,r),s(t.execute(c(n),r,u)))}),buffer:_("buffer",async()=>{const t=await a(()=>import("./bufferOperator-CuJjl5x5.js"),__vite__mapDeps([238,3,218,2,1,219,4])),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertToSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-DvsxlVIB.js").then(i=>i.e);return{convertToSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([172,3]));return(n,r,i)=>(r=e(o(i),n.spatialReference,r),t.execute(n,r))}),geodesicBuffer:_("geodesicBuffer",async()=>{const t=await a(()=>import("./geodesicBufferOperator-DXVTz717.js"),__vite__mapDeps([239,3,217,2,203])),{convert:e,meters:o,toLengthUnit:n}=await a(async()=>{const{convert:r,meters:i,toLengthUnit:u}=await import("./unitConversion-DvsxlVIB.js").then(E=>E.e);return{convert:r,meters:i,toLengthUnit:u}},__vite__mapDeps([172,3]));return await t.load(),(r,i,u)=>(i=e(n(u),o,i),t.execute(r,i))}),offset:_("offset",async()=>{const t=await a(()=>import("./offsetOperator-xtz1k9BY.js"),__vite__mapDeps([240,3,222,2,1,4])),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertToSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-DvsxlVIB.js").then(i=>i.e);return{convertToSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([172,3]));return(n,r,i,u)=>(r=e(o(i),n.spatialReference,r),t.execute(n,r,u))}),rotate:_("rotate",async()=>{const t=await a(()=>import("./operators-AYNyC_kI.js").then(o=>o.Z),__vite__mapDeps([215,3,2,1,216,4,217,203,202,218,219,220,10,221,6,222,15,223,8,224,12])),{default:e}=await a(async()=>{const{default:o}=await import("./operators-AYNyC_kI.js").then(n=>n.Y);return{default:o}},__vite__mapDeps([215,3,2,1,216,4,217,203,202,218,219,220,10,221,6,222,15,223,8,224,12]));return(o,n,r,i)=>{const u=new e().rotate(n,r,i);return s(t.execute(c(o),u))}}),centroid:_("centroid",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-B0Tqpu4h.js").then(e=>e.y),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return e=>s(t.execute(c(e)))}),labelPoint:_("labelPoint",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-B0Tqpu4h.js").then(e=>e.Z),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return e=>s(t.execute(c(e)))}),simplify:_("simplify",()=>a(()=>import("./simplifyOperator-CIlWJQze.js"),__vite__mapDeps([241,223,2,1,3,4])).then(t=>t.execute)),isSimple:_("isSimple",()=>a(()=>import("./simplifyOperator-CIlWJQze.js"),__vite__mapDeps([241,223,2,1,3,4])).then(t=>t.isSimple)),convexHull:_("convexHull",()=>a(()=>import("./convexHullOperator-BxBbvG50.js"),__vite__mapDeps([242,220,2,1,3,4])).then(t=>t.execute)),getNearestCoordinate:_("getNearestCoordinate",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-B0Tqpu4h.js").then(e=>e._),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o,n)=>{const r=t.getNearestCoordinate(c(e),c(o),n);return{...r,coordinate:s(r.coordinate)}}}),getNearestVertex:_("getNearestVertex",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-B0Tqpu4h.js").then(e=>e._),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o)=>{const n=t.getNearestVertex(c(e),c(o));return{...n,coordinate:s(n.coordinate)}}})};function d(t,e){const o=p[t];return o.loaded?o.execute.apply(void 0,e):o.load().then(()=>d(t,e))}export{d as invokeGeometryOp};
