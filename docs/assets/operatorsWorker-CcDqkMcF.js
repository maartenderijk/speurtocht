const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/disjointOperator-CgOQ0oJb.js","assets/ProjectionTransformation-CKsyCZdi.js","assets/SimpleGeometryCursor-B92kdZ15.js","assets/index-B1clX_ad.js","assets/jsonConverter-DLny_gJQ.js","assets/intersectsOperator-6ZmvK78b.js","assets/OperatorIntersects-Bjt2u4ap.js","assets/touchesOperator-BvP3OPfR.js","assets/OperatorTouches-BD2Qw5e3.js","assets/crossesOperator-rsSWyndI.js","assets/OperatorCrosses-DD_KC4uR.js","assets/withinOperator-DKO9BidP.js","assets/OperatorWithin-CMSbtCmu.js","assets/containsOperator-CFpR54wk.js","assets/overlapsOperator-CplrHDAf.js","assets/OperatorOverlaps-EQT9irDj.js","assets/OperatorGeodeticLength-DulxpfXm.js","assets/SceneLayerWorker-DHO26Pok.js","assets/MeshLocalVertexSpace-BGFc9Beh.js","assets/vec3-yaJRXtD7.js","assets/projectVectorToVector-Bw0MIpqx.js","assets/projectPointToVector-CEzVccQ8.js","assets/sphere-DXmJaO3M.js","assets/mat3f64-q3fE-ZOt.js","assets/plane-CLRQzWRo.js","assets/mat4f64-Dk4dwAN8.js","assets/quatf64-aQ5IuZRd.js","assets/I3SBinaryReader-B8XkY-kN.js","assets/VertexAttribute-Cq4MnHjR.js","assets/edgeUtils-DY7FnzUU.js","assets/floatRGBA-BWTOoSOl.js","assets/NormalAttribute.glsl-0IKrrQQ-.js","assets/glsl-BH37Aalp.js","assets/ShaderOutput-DnYY5J1_.js","assets/BindType-BBwFZqyN.js","assets/orientedBoundingBox-CnYQOEXf.js","assets/quat-7wkv5ITG.js","assets/spatialReferenceEllipsoidUtils-CuJ2-pKh.js","assets/computeTranslationToOriginAndRotation-COS7WGhT.js","assets/popupUtils-DsOwz_o6.js","assets/associatedFeatureServiceUtils-RmWN0Lqr.js","assets/SketchOptions-CQSjjGKg.js","assets/geodesicUtils-gK-LWLMm.js","assets/quantityUtils-CDzg45vv.js","assets/utils-C77hBRVU.js","assets/quantizationUtils-DD648c3R.js","assets/utils-C2J1uvnu.js","assets/FeatureLayerSource-DBOmguSN.js","assets/meshVertexSpaceUtils-BxQFVDVI.js","assets/MeshTransform-u2Y55-k6.js","assets/axisAngleDegrees-DiBBxrJd.js","assets/editingSupport-UlOlcTxf.js","assets/query-1Lqq-4kl.js","assets/pbfQueryUtils-MRgpB67C.js","assets/pbf-B8muRIEx.js","assets/memoryEstimations-s89CRICA.js","assets/OptimizedFeatureSet-BwDEL1Yu.js","assets/executeQueryJSON-8bBA1MlW.js","assets/featureConversionUtils-eDycgEIU.js","assets/layersCreator-C0mpaf9S.js","assets/loadUtils-DRnwXFRW.js","assets/fetchService-BUFvRCM3.js","assets/lazyLayerLoader-BiitxeW2.js","assets/portalLayers-XfppbL3k.js","assets/saveUtils-DPt0bQiD.js","assets/multiOriginJSONSupportUtils-C0wm8_Yw.js","assets/ImageryTileLayerView2D-BADL-5X7.js","assets/RasterVFDisplayObject-Dc1EMoYU.js","assets/VertexArrayObject-B0s3ElBu.js","assets/VertexElementDescriptor-BLyltQyJ.js","assets/dataUtils-CuTujQk-.js","assets/WGLContainer-Ck3-D6sx.js","assets/dataViewUtils-DzazD2uv.js","assets/ProgramTemplate-Clllt_Co.js","assets/vec3f32-nZdmKIgz.js","assets/Container-Cls3TW2m.js","assets/config-CEg8Y01q.js","assets/earcut-D9gy186-.js","assets/LayerView--6oe_-ag.js","assets/layerViewUtils-BEndzRmB.js","assets/rasterUtils-DZun6HWB.js","assets/VertexStream-B_y_PBcB.js","assets/utils-C5oUHo9T.js","assets/FramebufferObject-Cc54bW9q.js","assets/TileContainer-C_PJNHZR.js","assets/rasterProjectionHelper-BMokJrXe.js","assets/timeSupport-Dc9_XJ0R.js","assets/RefreshableLayerView-lrrr-E7n.js","assets/RasterWorker-By7uVUeG.js","assets/_commonjsHelpers-DCkdB7M8.js","assets/colorUtils-Bxex6SZt.js","assets/ElevationLayer-BwZK6iT9.js","assets/ByteSizeUnit-BsxeN7wM.js","assets/WorkerHandle-BUQTTfUh.js","assets/editingTools-CB9e6qwr.js","assets/interfaces-Dmcpn_P5.js","assets/VerticalOffset.glsl-CDZEI65f.js","assets/Indices-2C0JD5Nh.js","assets/InterleavedLayout-BtmrBVl7.js","assets/BufferView-DEpY_Qod.js","assets/triangle-BHKmXhFw.js","assets/lineSegment-Dd8-4d7V.js","assets/renderState-BK7paQQa.js","assets/boundedPlane--9NMWtKv.js","assets/requestImageUtils-BL3VuEy-.js","assets/TextureFormat-1mYWTFa-.js","assets/ShaderBuilder-Dopz5ya8.js","assets/triangulationUtils-UPFilLOI.js","assets/deduplicate-jKYcQesP.js","assets/RibbonLine.glsl-CBd_8uxi.js","assets/HUDVisibility.glsl-e9Vxo4K9.js","assets/doublePrecisionUtils-B0owpBza.js","assets/hydratedFeatures-DTK0nyji.js","assets/Octree-BmlzJYaQ.js","assets/HUDMaterial-DTDoBHcO.js","assets/NestedMap-GuqgquCN.js","assets/RouteLayerInteraction-CacUnf0e.js","assets/GraphicsLayer-BDmzjC5d.js","assets/RouteLayerView2D-BIAVktIx.js","assets/GraphicContainer-CYMQY4O0.js","assets/AGraphicContainer-C11sJUdw.js","assets/TechniqueInstance-CCIqnpZz.js","assets/UpdateTracking2D-DXCBvCWb.js","assets/BidiEngine-QXap_35O.js","assets/Rect-pv8pGbI7.js","assets/rasterizingUtils-CGVbzJ7g.js","assets/FeatureCommandQueue-CZ6MZq1q.js","assets/TechniqueType-uMFRS8dR.js","assets/GraphShaderModule-D1sUNkqu.js","assets/QueueProcessor-BrfIZkTD.js","assets/GraphicsView2D-9mW9ljGt.js","assets/OverrideHelper-aoFNLnrS.js","assets/FeatureMetadata-DWyIU2T_.js","assets/queryUtils-CU8mhpzI.js","assets/json-Wa8cmqdu.js","assets/timeSupport-Cy5zZR7D.js","assets/TimeOnly-9Ll1kDMQ.js","assets/dehydratedFeatures-qd27JOQr.js","assets/automaticLengthMeasurementUtils-DP3ghISz.js","assets/memoize-DmxaQ-k8.js","assets/unitFormatUtils-DULpex2I.js","assets/geodesicLengthMeasurementUtils-DvOZOf9d.js","assets/geometryEngineBase-B0ZyeKAX.js","assets/hydrated-DynkxWZX.js","assets/glUtil-BSdNA_i_.js","assets/automaticAreaMeasurementUtils-C-kNoWiT.js","assets/PointSnappingHint-Ccofr9C8.js","assets/editPlaneUtils-WIKqqahw.js","assets/ReactiveSet-Dap5lrY9.js","assets/SelectedVertexTooltipInfo-V3rSAeIs.js","assets/TranslateTooltipInfo-Eh6K04M-.js","assets/utils-DomMpDLx.js","assets/cimSymbolUtils-CXtGLtOB.js","assets/ExtentScaleTooltipInfo-AH1zzf55.js","assets/GraphicManipulator-Da094KKH.js","assets/drapedUtils-C1icbIoN.js","assets/KMLLayerView2D-H645VLOL.js","assets/BitmapTechnique-D8kioeO5.js","assets/BitmapContainer-C5-Dpo2X.js","assets/MaterialPrograms-5Yt3B1GH.js","assets/webglDeps-BGftlSZu.js","assets/testSVGPremultipliedAlpha-O2lP3sIC.js","assets/FeatureLayerView2D-Czw9eE_M.js","assets/AttributeBinsFeatureSet-Bl9VY5yu.js","assets/AttributeBinsQuery-DnBwPmgY.js","assets/FixedIntervalBinParameters-0lU-D3UH.js","assets/CircularArray-CujHzHWW.js","assets/SDFHelper-CAsSUr2W.js","assets/parquet-D_-yq6lQ.js","assets/floorFilterUtils-DZ5C6FQv.js","assets/knowledgegraph-B9NZC4EV.js","assets/arcade-Bs66P9yl.js","assets/unitConversion-C6rbLZTM.js","assets/ImmutableArray-BPVd6ESQ.js","assets/shared-DesicS5o.js","assets/number-bTc0jCtz.js","assets/WhereClause-BtdYVe6y.js","assets/portalUtils-C45kTmwz.js","assets/executeQueryForSnapping-CNh2WtWx.js","assets/PooledRBush-DqWDvNvU.js","assets/optimizedFeatureQueryEngineAdapter-Ct3ZX3v3.js","assets/QueryEngine-D14yZLhG.js","assets/WhereClauseCache-U2z2_SID.js","assets/SnappingCandidate-DGkpYqI6.js","assets/MapImageLayerView2D-CR7UN5N0.js","assets/HighlightGraphicContainer-DvbM6bJr.js","assets/ExportStrategy-YAFg4xBg.js","assets/MapServiceLayerViewHelper-O4EF7pmE.js","assets/MemorySourceWorker-CMwtS0Ay.js","assets/sourceUtils-C6O3yPRa.js","assets/date-Ctp1FiBW.js","assets/MediaLayerView2D-CJMUXBUW.js","assets/enums-BRzLM11V.js","assets/GridShader-DGJ-UEV_.js","assets/PieChartMeshWriter-wxELmf1O.js","assets/libtess-DnuMi6ro.js","assets/utils-g5u8OaGq.js","assets/grouping-BMqiNju8.js","assets/OverlayContainer-DRVkfLHg.js","assets/utils-ehcGqGxa.js","assets/FeaturePipelineWorker-C-2x6LaM.js","assets/MeshWriterRegistry-CqS5Bc82.js","assets/operatorGeodeticDensify-BlqsnKPy.js","assets/geodeticCurveType-CirnHLSB.js","assets/geojson-D0eI4BVs.js","assets/PointCloudWorker-DgY1U5uN.js","assets/uploadAssets-RL-nxUJD.js","assets/meshFeatureAttributes-CBAlbP9s.js","assets/SourceLayerData-Bs4O9Z_g.js","assets/VideoLayerView2D-Cr4I_ASD.js","assets/webdocSaveUtils-YbnV5xZd.js","assets/basemapUtils-DBQvOUY9.js","assets/resourceUtils-BYB7zGvf.js","assets/WFSSourceWorker-CUiVUzRy.js","assets/WMSLayerView2D-iowS3hsT.js","assets/operators-Bfc8S-kM.js","assets/apiConverter-CzysqALl.js","assets/operatorGeodesicBuffer-C0yy5xY7.js","assets/operatorBuffer-DAkd6KoD.js","assets/GeometryCleaner-BEJM7I4l-Bit11Yzp.js","assets/operatorConvexHull-BvOXm_iU.js","assets/operatorIntersection-vMVD0LDQ.js","assets/operatorOffset-BgHKBAwf.js","assets/operatorSimplify-nJpAiYeU.js","assets/operatorUnion-ByanvErq.js","assets/MeshComponent-BlRaXbav.js","assets/meshProperties-C4iW0Ukm.js","assets/MeshVertexAttributes-1gGiAqIn.js","assets/vec4-UvORcvuS.js","assets/loader-DHUY8f0N.js","assets/objectResourceUtils-DMYKCzyR.js","assets/devEnvironmentUtils-CnNDiFMM.js","assets/DefaultMaterial-C6TWqVAD.js","assets/vertexSpaceConversion-Md8F_3YY.js","assets/featureLayerUtils-BzCMwGiJ.js","assets/intersectionOperator-Gqp8CFnM.js","assets/unionOperator-D6igOIzi.js","assets/lengthOperator-0orUVj9j.js","assets/bufferOperator-ykhfFzh_.js","assets/geodesicBufferOperator-BRSmGnx2.js","assets/offsetOperator-CgsBsEr7.js","assets/simplifyOperator-CB6T8Ez3.js","assets/convexHullOperator-DyCEqu9W.js"])))=>i.map(i=>d[i]);
import{aP as a,ca as c}from"./index-B1clX_ad.js";function _(t,e){let o;return{loaded:!1,load:()=>o??(o=e().then(n=>{p[t]={loaded:!0,execute:n}}))}}function s(t){return t==null?null:t.toJSON()}const p={disjoint:_("disjoint",()=>a(()=>import("./disjointOperator-CgOQ0oJb.js"),__vite__mapDeps([0,1,2,3,4])).then(t=>t.execute)),intersects:_("intersects",()=>a(()=>import("./intersectsOperator-6ZmvK78b.js"),__vite__mapDeps([5,6,1,2,3,4])).then(t=>t.execute)),touches:_("touches",()=>a(()=>import("./touchesOperator-BvP3OPfR.js"),__vite__mapDeps([7,8,1,2,3,4])).then(t=>t.execute)),crosses:_("crosses",()=>a(()=>import("./crossesOperator-rsSWyndI.js"),__vite__mapDeps([9,10,1,2,3,4])).then(t=>t.execute)),within:_("within",()=>a(()=>import("./withinOperator-DKO9BidP.js"),__vite__mapDeps([11,12,1,2,3,4])).then(t=>t.execute)),contains:_("contains",()=>a(()=>import("./containsOperator-CFpR54wk.js"),__vite__mapDeps([13,1,2,3,4])).then(t=>t.execute)),overlaps:_("overlaps",()=>a(()=>import("./overlapsOperator-CplrHDAf.js"),__vite__mapDeps([14,15,1,2,3,4])).then(t=>t.execute)),equals:_("equals",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DulxpfXm.js").then(e=>e.J),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o)=>t.execute(c(e),c(o))}),relate:_("relate",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DulxpfXm.js").then(e=>e.$),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o,n)=>t.execute(c(e),c(o),n)}),intersection:_("intersection",()=>a(()=>import("./intersectionOperator-Gqp8CFnM.js"),__vite__mapDeps([235,3,221,2,1,4])).then(t=>t.execute)),union:_("union",()=>a(()=>import("./unionOperator-D6igOIzi.js"),__vite__mapDeps([236,224,2,1,3,4])).then(t=>t.executeMany)),difference:_("difference",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DulxpfXm.js").then(e=>e.F),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o)=>s(t.execute(c(e),c(o)))}),symmetricDifference:_("symmetricDifference",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DulxpfXm.js").then(e=>e.a0),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o)=>s(t.execute(c(e),c(o)))}),clip:_("clip",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DulxpfXm.js").then(e=>e.z),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o)=>s(t.execute(c(e),c(o)))}),cut:_("cut",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DulxpfXm.js").then(e=>e.A),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o)=>t.execute(c(e),c(o)).map(n=>s(n))}),area:_("area",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DulxpfXm.js").then(n=>n.x),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convertFromSpatialReferenceUnit:e,toAreaUnit:o}=await a(async()=>{const{convertFromSpatialReferenceUnit:n,toAreaUnit:r}=await import("./unitConversion-C6rbLZTM.js").then(i=>i.e);return{convertFromSpatialReferenceUnit:n,toAreaUnit:r}},__vite__mapDeps([172,3]));return(n,r)=>{const i=t.execute(c(n));return e(n.spatialReference,o(r),i)}}),geodeticArea:_("geodeticArea",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DulxpfXm.js").then(r=>r.Q),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convert:e,squareMeters:o,toAreaUnit:n}=await a(async()=>{const{convert:r,squareMeters:i,toAreaUnit:u}=await import("./unitConversion-C6rbLZTM.js").then(E=>E.e);return{convert:r,squareMeters:i,toAreaUnit:u}},__vite__mapDeps([172,3]));return await t.load(),(r,i)=>{const u=t.execute(c(r));return e(o,n(i),u)}}),length:_("length",async()=>{const t=await a(()=>import("./lengthOperator-0orUVj9j.js"),__vite__mapDeps([237,3,4,1,2])),{convertFromSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertFromSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-C6rbLZTM.js").then(i=>i.e);return{convertFromSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([172,3]));return(n,r)=>{const i=t.execute(n);return e(n.spatialReference,o(r),i)}}),geodeticLength:_("geodeticLength",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DulxpfXm.js").then(r=>r.Y),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convert:e,meters:o,toLengthUnit:n}=await a(async()=>{const{convert:r,meters:i,toLengthUnit:u}=await import("./unitConversion-C6rbLZTM.js").then(E=>E.e);return{convert:r,meters:i,toLengthUnit:u}},__vite__mapDeps([172,3]));return await t.load(),(r,i)=>{const u=t.execute(c(r));return e(o,n(i),u)}}),distance:_("distance",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DulxpfXm.js").then(n=>n.H),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convertFromSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertFromSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-C6rbLZTM.js").then(i=>i.e);return{convertFromSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([172,3]));return(n,r,i)=>{const u=t.execute(c(n),c(r));return e(n.spatialReference,o(i),u)}}),densify:_("densify",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DulxpfXm.js").then(n=>n.E),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertToSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-C6rbLZTM.js").then(i=>i.e);return{convertToSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([172,3]));return(n,r,i)=>(r=e(o(i),n.spatialReference,r),s(t.execute(c(n),r)))}),geodeticDensify:_("geodeticDensify",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DulxpfXm.js").then(r=>r.X),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convert:e,meters:o,toLengthUnit:n}=await a(async()=>{const{convert:r,meters:i,toLengthUnit:u}=await import("./unitConversion-C6rbLZTM.js").then(E=>E.e);return{convert:r,meters:i,toLengthUnit:u}},__vite__mapDeps([172,3]));return await t.load(),(r,i,u)=>(i=e(n(u),o,i),s(t.execute(c(r),i)))}),generalize:_("generalize",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DulxpfXm.js").then(n=>n.N),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertToSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-C6rbLZTM.js").then(i=>i.e);return{convertToSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([172,3]));return(n,r,i,u)=>(r=e(o(i),n.spatialReference,r),s(t.execute(c(n),r,u)))}),buffer:_("buffer",async()=>{const t=await a(()=>import("./bufferOperator-ykhfFzh_.js"),__vite__mapDeps([238,3,218,2,1,219,4])),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertToSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-C6rbLZTM.js").then(i=>i.e);return{convertToSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([172,3]));return(n,r,i)=>(r=e(o(i),n.spatialReference,r),t.execute(n,r))}),geodesicBuffer:_("geodesicBuffer",async()=>{const t=await a(()=>import("./geodesicBufferOperator-BRSmGnx2.js"),__vite__mapDeps([239,3,217,2,203])),{convert:e,meters:o,toLengthUnit:n}=await a(async()=>{const{convert:r,meters:i,toLengthUnit:u}=await import("./unitConversion-C6rbLZTM.js").then(E=>E.e);return{convert:r,meters:i,toLengthUnit:u}},__vite__mapDeps([172,3]));return await t.load(),(r,i,u)=>(i=e(n(u),o,i),t.execute(r,i))}),offset:_("offset",async()=>{const t=await a(()=>import("./offsetOperator-CgsBsEr7.js"),__vite__mapDeps([240,3,222,2,1,4])),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertToSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-C6rbLZTM.js").then(i=>i.e);return{convertToSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([172,3]));return(n,r,i,u)=>(r=e(o(i),n.spatialReference,r),t.execute(n,r,u))}),rotate:_("rotate",async()=>{const t=await a(()=>import("./operators-Bfc8S-kM.js").then(o=>o.Z),__vite__mapDeps([215,3,2,1,216,4,217,203,202,218,219,220,10,221,6,222,15,223,8,224,12])),{default:e}=await a(async()=>{const{default:o}=await import("./operators-Bfc8S-kM.js").then(n=>n.Y);return{default:o}},__vite__mapDeps([215,3,2,1,216,4,217,203,202,218,219,220,10,221,6,222,15,223,8,224,12]));return(o,n,r,i)=>{const u=new e().rotate(n,r,i);return s(t.execute(c(o),u))}}),centroid:_("centroid",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DulxpfXm.js").then(e=>e.y),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return e=>s(t.execute(c(e)))}),labelPoint:_("labelPoint",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DulxpfXm.js").then(e=>e.Z),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return e=>s(t.execute(c(e)))}),simplify:_("simplify",()=>a(()=>import("./simplifyOperator-CB6T8Ez3.js"),__vite__mapDeps([241,223,2,1,3,4])).then(t=>t.execute)),isSimple:_("isSimple",()=>a(()=>import("./simplifyOperator-CB6T8Ez3.js"),__vite__mapDeps([241,223,2,1,3,4])).then(t=>t.isSimple)),convexHull:_("convexHull",()=>a(()=>import("./convexHullOperator-DyCEqu9W.js"),__vite__mapDeps([242,220,2,1,3,4])).then(t=>t.execute)),getNearestCoordinate:_("getNearestCoordinate",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DulxpfXm.js").then(e=>e._),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o,n)=>{const r=t.getNearestCoordinate(c(e),c(o),n);return{...r,coordinate:s(r.coordinate)}}}),getNearestVertex:_("getNearestVertex",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DulxpfXm.js").then(e=>e._),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o)=>{const n=t.getNearestVertex(c(e),c(o));return{...n,coordinate:s(n.coordinate)}}})};function d(t,e){const o=p[t];return o.loaded?o.execute.apply(void 0,e):o.load().then(()=>d(t,e))}export{d as invokeGeometryOp};
