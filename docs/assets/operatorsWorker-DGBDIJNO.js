const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/disjointOperator-BuYVTLqx.js","assets/ProjectionTransformation-wLgQojwe.js","assets/SimpleGeometryCursor-B92kdZ15.js","assets/index-CRroVR8n.js","assets/jsonConverter-CweYfUVt.js","assets/intersectsOperator-BEwMEmvy.js","assets/OperatorIntersects-BwhfViBm.js","assets/touchesOperator-CFHGxelQ.js","assets/OperatorTouches-Ragq08g3.js","assets/crossesOperator-Cb9u1ErT.js","assets/OperatorCrosses-BdXdwerZ.js","assets/withinOperator-CRzdd3He.js","assets/OperatorWithin-q8CaZvJd.js","assets/containsOperator-CKfpdpvO.js","assets/overlapsOperator-Y_7Ld5uK.js","assets/OperatorOverlaps-B0EW58LU.js","assets/OperatorGeodeticLength-BwK-xJrJ.js","assets/SceneLayerWorker-CVh3ke24.js","assets/MeshLocalVertexSpace-b7IcsYDD.js","assets/vec3-CP7Q8G3G.js","assets/projectVectorToVector-Bh1Ppe8O.js","assets/projectPointToVector-DanvQHb9.js","assets/sphere-BGiWLMCd.js","assets/mat3f64-q3fE-ZOt.js","assets/plane-BCkLA9nA.js","assets/mat4f64-Dk4dwAN8.js","assets/quatf64-aQ5IuZRd.js","assets/I3SBinaryReader-BZB8yY8k.js","assets/VertexAttribute-Cq4MnHjR.js","assets/edgeUtils-DP5wtmcD.js","assets/floatRGBA-DGJ7uNfp.js","assets/NormalAttribute.glsl-BidKAnUw.js","assets/glsl-BH37Aalp.js","assets/ShaderOutput-DnYY5J1_.js","assets/BindType-BBwFZqyN.js","assets/orientedBoundingBox-05ok6JGR.js","assets/quat-BhKT9Uif.js","assets/spatialReferenceEllipsoidUtils-DFgAbxti.js","assets/computeTranslationToOriginAndRotation-Diewzmuq.js","assets/popupUtils-CZCAn8J-.js","assets/associatedFeatureServiceUtils-CtkIIs1p.js","assets/SketchOptions-CmE92SHH.js","assets/geodesicUtils-BSbtA5Y6.js","assets/quantityUtils-Baa7fhSe.js","assets/utils-YV3qUkTf.js","assets/quantizationUtils-Ia3dsHZJ.js","assets/utils-Bl5zbwKd.js","assets/FeatureLayerSource-CKb2gkbY.js","assets/meshVertexSpaceUtils-o26qZdK1.js","assets/MeshTransform-CSwyo1MN.js","assets/axisAngleDegrees-D6NMm8j4.js","assets/editingSupport-Da_baTsi.js","assets/query-Bx7-tHb3.js","assets/pbfQueryUtils-6Q2wQd6J.js","assets/pbf-DU6YESPB.js","assets/memoryEstimations-CD4idZsR.js","assets/OptimizedFeatureSet-DAD_hUht.js","assets/executeQueryJSON-BglNRgu4.js","assets/featureConversionUtils-B9mEzuoj.js","assets/layersCreator-iiDsrByR.js","assets/loadUtils-BOYmWhc8.js","assets/fetchService-bUum6HTX.js","assets/lazyLayerLoader-BsmsK6Pm.js","assets/portalLayers-DTt6_8lj.js","assets/saveUtils-DpY8d-97.js","assets/multiOriginJSONSupportUtils-C0wm8_Yw.js","assets/ImageryTileLayerView2D-CCqvd8SY.js","assets/RasterVFDisplayObject-B0MEmW6Y.js","assets/VertexArrayObject-Cl1jJWwN.js","assets/VertexElementDescriptor-BLyltQyJ.js","assets/dataUtils-D3vyia15.js","assets/WGLContainer-B0GBBDIu.js","assets/dataViewUtils-BPq-Ymec.js","assets/ProgramTemplate-Drp74HwG.js","assets/vec3f32-nZdmKIgz.js","assets/Container-DEiVUKEI.js","assets/config-kNQkKnq5.js","assets/earcut-D9gy186-.js","assets/LayerView-CyJOQf6Z.js","assets/layerViewUtils-C-IqA0BX.js","assets/rasterUtils-D3FOdUC9.js","assets/VertexStream-ByP3Tu3D.js","assets/utils-DHSsqX6q.js","assets/FramebufferObject-Xtg1q8qo.js","assets/TileContainer-CvcW3IGt.js","assets/rasterProjectionHelper-DpNWmTnZ.js","assets/timeSupport-DWSa48lQ.js","assets/RefreshableLayerView-CmYpctd7.js","assets/RasterWorker-r1ygj6Vb.js","assets/_commonjsHelpers-DCkdB7M8.js","assets/colorUtils-BGjQhwWm.js","assets/ElevationLayer-CQaL8Jh2.js","assets/ByteSizeUnit-BsxeN7wM.js","assets/WorkerHandle-WJ5pZ8LS.js","assets/editingTools-CuwZ7Rl6.js","assets/interfaces-Bl1nfnP6.js","assets/VerticalOffset.glsl-CCkVjP08.js","assets/Indices-DtAltZ93.js","assets/InterleavedLayout-kFeU6u5B.js","assets/BufferView-Cn30kaO3.js","assets/triangle-b-jq0Vql.js","assets/lineSegment-DMDiyCAG.js","assets/renderState-fd7AHbZE.js","assets/boundedPlane-CsFI46ez.js","assets/requestImageUtils-bS2GS9bl.js","assets/TextureFormat-1mYWTFa-.js","assets/ShaderBuilder-ZqCWyMrM.js","assets/triangulationUtils-DTDtUs9w.js","assets/deduplicate-1ydNPPRr.js","assets/RibbonLine.glsl-BFBChwUK.js","assets/HUDVisibility.glsl-BPn7CZKd.js","assets/doublePrecisionUtils-B0owpBza.js","assets/hydratedFeatures-DSBY9lOb.js","assets/Octree-CFXAGc75.js","assets/HUDMaterial-f7-5Lbzp.js","assets/NestedMap-GuqgquCN.js","assets/RouteLayerInteraction-DEM9ulXe.js","assets/GraphicsLayer-CJC8n5uX.js","assets/RouteLayerView2D-BQjeG2Av.js","assets/GraphicContainer-CrepfwMU.js","assets/AGraphicContainer-Dbsb5J2q.js","assets/TechniqueInstance-D-8X-YK8.js","assets/UpdateTracking2D-Cq_3Gzl-.js","assets/BidiEngine-QXap_35O.js","assets/Rect-DAnXYN4W.js","assets/rasterizingUtils-L2WIotKi.js","assets/FeatureCommandQueue-geGZorL5.js","assets/TechniqueType-uMFRS8dR.js","assets/GraphShaderModule-Cw7R9kbZ.js","assets/QueueProcessor-lNYK-t5t.js","assets/GraphicsView2D-18XMoSvy.js","assets/OverrideHelper-jFonuCuU.js","assets/FeatureMetadata-eGg936Li.js","assets/queryUtils-BMFYm9hO.js","assets/json-Wa8cmqdu.js","assets/timeSupport-C-opIFRa.js","assets/TimeOnly-CWS4UH_z.js","assets/dehydratedFeatures-B9zQPY5_.js","assets/automaticLengthMeasurementUtils-BAXtI8V9.js","assets/memoize-DmxaQ-k8.js","assets/unitFormatUtils-BSSS2dZ4.js","assets/geodesicLengthMeasurementUtils-DPifgfGx.js","assets/geometryEngineBase-B0ZyeKAX.js","assets/hydrated-GHHFacrh.js","assets/glUtil-DrHqLXOp.js","assets/automaticAreaMeasurementUtils-B1R-1jUh.js","assets/PointSnappingHint-BcDbAshA.js","assets/editPlaneUtils-BbRG0zpv.js","assets/ReactiveSet-DHsfpfOq.js","assets/SelectedVertexTooltipInfo-BgWPdUZt.js","assets/TranslateTooltipInfo-RIS087Pf.js","assets/utils-tT2DoQGv.js","assets/cimSymbolUtils-BbMmDekz.js","assets/ExtentScaleTooltipInfo-ClQKEO1n.js","assets/GraphicManipulator-DWiUh8eS.js","assets/drapedUtils-CFMzAVIO.js","assets/KMLLayerView2D-DhSlGg-f.js","assets/BitmapTechnique-Dm6nnnyl.js","assets/BitmapContainer-ByRrSPkG.js","assets/MaterialPrograms-Dyd3VdEw.js","assets/webglDeps-CnNx_Ot0.js","assets/testSVGPremultipliedAlpha-BOaGpnuT.js","assets/FeatureLayerView2D-BAQ6kGry.js","assets/AttributeBinsFeatureSet-gR55-6CV.js","assets/AttributeBinsQuery-I2mkJBeQ.js","assets/FixedIntervalBinParameters-CY4jK3Qd.js","assets/CircularArray-CujHzHWW.js","assets/SDFHelper-uai5aKVH.js","assets/parquet-CfnBjT03.js","assets/floorFilterUtils-DZ5C6FQv.js","assets/knowledgegraph-Cc6AxIXE.js","assets/arcade-BBefi8KM.js","assets/unitConversion-CHo8Fnbf.js","assets/ImmutableArray-BPVd6ESQ.js","assets/shared-FyE7a9n3.js","assets/number-nZMgW8tT.js","assets/WhereClause-8TqBovll.js","assets/portalUtils-Yh48btqA.js","assets/executeQueryForSnapping-DV9-HQsM.js","assets/PooledRBush-3SV1Wg9g.js","assets/optimizedFeatureQueryEngineAdapter-DdGjVLKc.js","assets/QueryEngine-6BZpQB3b.js","assets/WhereClauseCache-mUq0YoKf.js","assets/SnappingCandidate-DGkpYqI6.js","assets/MapImageLayerView2D-B8M-eDfA.js","assets/HighlightGraphicContainer-D7EIVYca.js","assets/ExportStrategy-DK-egRn3.js","assets/MapServiceLayerViewHelper-DLTRQavP.js","assets/MemorySourceWorker-Dtif1Uu0.js","assets/sourceUtils-CWFMz45m.js","assets/date-Ctp1FiBW.js","assets/MediaLayerView2D-CNEBw-rp.js","assets/enums-BRzLM11V.js","assets/GridShader-BQVTi1ep.js","assets/PieChartMeshWriter-K7rLtpT1.js","assets/libtess-DGfaSP-i.js","assets/utils-W9BqmL97.js","assets/grouping-iiLn4hNj.js","assets/OverlayContainer-BYzu4d_P.js","assets/utils-ehcGqGxa.js","assets/FeaturePipelineWorker-CmTuOJGA.js","assets/MeshWriterRegistry-DvhAkZnJ.js","assets/operatorGeodeticDensify-D-kDvhzD.js","assets/geodeticCurveType-CirnHLSB.js","assets/geojson-C_qmOPSA.js","assets/PointCloudWorker-Dp5MnHWk.js","assets/uploadAssets-DzC3ixPy.js","assets/meshFeatureAttributes-smjRDREk.js","assets/SourceLayerData-hAu_Jpx4.js","assets/VideoLayerView2D-JRwSyYta.js","assets/webdocSaveUtils-DPglXNm1.js","assets/basemapUtils-CTLAiQ_Z.js","assets/resourceUtils-CA2TqlW8.js","assets/WFSSourceWorker-CrF5ZDkG.js","assets/WMSLayerView2D-NrdGI30N.js","assets/operators-Bp1kTpiU.js","assets/apiConverter-CebegGPA.js","assets/operatorGeodesicBuffer-BG-qE-fy.js","assets/operatorBuffer-C8nmJEZY.js","assets/GeometryCleaner-BEJM7I4l-De88dfdp.js","assets/operatorConvexHull-BDC9FrNB.js","assets/operatorIntersection-B7pEuQLX.js","assets/operatorOffset-C0YwLm1L.js","assets/operatorSimplify-CMm7OMFC.js","assets/operatorUnion-DDKobEJz.js","assets/MeshComponent-HHq7j1Cn.js","assets/meshProperties-C4iW0Ukm.js","assets/MeshVertexAttributes-CRSfrBj0.js","assets/vec4-Bf12tKON.js","assets/loader-D55UeQCd.js","assets/objectResourceUtils-DB-CogMH.js","assets/devEnvironmentUtils-CnNDiFMM.js","assets/DefaultMaterial-SXTgBODF.js","assets/vertexSpaceConversion-DDw1taLM.js","assets/featureLayerUtils-CWmU1QnA.js","assets/intersectionOperator-DuWcO8-c.js","assets/unionOperator-B9KR2xFN.js","assets/lengthOperator-CGkzhEVe.js","assets/bufferOperator-DsH4Se8c.js","assets/geodesicBufferOperator-COGEmI99.js","assets/offsetOperator-C2rBjXw_.js","assets/simplifyOperator-BAT7KkTF.js","assets/convexHullOperator-UlASyzKA.js"])))=>i.map(i=>d[i]);
import{aP as a,ca as c}from"./index-CRroVR8n.js";function _(t,e){let o;return{loaded:!1,load:()=>o??(o=e().then(n=>{p[t]={loaded:!0,execute:n}}))}}function s(t){return t==null?null:t.toJSON()}const p={disjoint:_("disjoint",()=>a(()=>import("./disjointOperator-BuYVTLqx.js"),__vite__mapDeps([0,1,2,3,4])).then(t=>t.execute)),intersects:_("intersects",()=>a(()=>import("./intersectsOperator-BEwMEmvy.js"),__vite__mapDeps([5,6,1,2,3,4])).then(t=>t.execute)),touches:_("touches",()=>a(()=>import("./touchesOperator-CFHGxelQ.js"),__vite__mapDeps([7,8,1,2,3,4])).then(t=>t.execute)),crosses:_("crosses",()=>a(()=>import("./crossesOperator-Cb9u1ErT.js"),__vite__mapDeps([9,10,1,2,3,4])).then(t=>t.execute)),within:_("within",()=>a(()=>import("./withinOperator-CRzdd3He.js"),__vite__mapDeps([11,12,1,2,3,4])).then(t=>t.execute)),contains:_("contains",()=>a(()=>import("./containsOperator-CKfpdpvO.js"),__vite__mapDeps([13,1,2,3,4])).then(t=>t.execute)),overlaps:_("overlaps",()=>a(()=>import("./overlapsOperator-Y_7Ld5uK.js"),__vite__mapDeps([14,15,1,2,3,4])).then(t=>t.execute)),equals:_("equals",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-BwK-xJrJ.js").then(e=>e.J),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o)=>t.execute(c(e),c(o))}),relate:_("relate",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-BwK-xJrJ.js").then(e=>e.$),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o,n)=>t.execute(c(e),c(o),n)}),intersection:_("intersection",()=>a(()=>import("./intersectionOperator-DuWcO8-c.js"),__vite__mapDeps([235,3,221,2,1,4])).then(t=>t.execute)),union:_("union",()=>a(()=>import("./unionOperator-B9KR2xFN.js"),__vite__mapDeps([236,224,2,1,3,4])).then(t=>t.executeMany)),difference:_("difference",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-BwK-xJrJ.js").then(e=>e.F),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o)=>s(t.execute(c(e),c(o)))}),symmetricDifference:_("symmetricDifference",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-BwK-xJrJ.js").then(e=>e.a0),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o)=>s(t.execute(c(e),c(o)))}),clip:_("clip",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-BwK-xJrJ.js").then(e=>e.z),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o)=>s(t.execute(c(e),c(o)))}),cut:_("cut",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-BwK-xJrJ.js").then(e=>e.A),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o)=>t.execute(c(e),c(o)).map(n=>s(n))}),area:_("area",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-BwK-xJrJ.js").then(n=>n.x),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convertFromSpatialReferenceUnit:e,toAreaUnit:o}=await a(async()=>{const{convertFromSpatialReferenceUnit:n,toAreaUnit:r}=await import("./unitConversion-CHo8Fnbf.js").then(i=>i.e);return{convertFromSpatialReferenceUnit:n,toAreaUnit:r}},__vite__mapDeps([172,3]));return(n,r)=>{const i=t.execute(c(n));return e(n.spatialReference,o(r),i)}}),geodeticArea:_("geodeticArea",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-BwK-xJrJ.js").then(r=>r.Q),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convert:e,squareMeters:o,toAreaUnit:n}=await a(async()=>{const{convert:r,squareMeters:i,toAreaUnit:u}=await import("./unitConversion-CHo8Fnbf.js").then(E=>E.e);return{convert:r,squareMeters:i,toAreaUnit:u}},__vite__mapDeps([172,3]));return await t.load(),(r,i)=>{const u=t.execute(c(r));return e(o,n(i),u)}}),length:_("length",async()=>{const t=await a(()=>import("./lengthOperator-CGkzhEVe.js"),__vite__mapDeps([237,3,4,1,2])),{convertFromSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertFromSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-CHo8Fnbf.js").then(i=>i.e);return{convertFromSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([172,3]));return(n,r)=>{const i=t.execute(n);return e(n.spatialReference,o(r),i)}}),geodeticLength:_("geodeticLength",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-BwK-xJrJ.js").then(r=>r.Y),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convert:e,meters:o,toLengthUnit:n}=await a(async()=>{const{convert:r,meters:i,toLengthUnit:u}=await import("./unitConversion-CHo8Fnbf.js").then(E=>E.e);return{convert:r,meters:i,toLengthUnit:u}},__vite__mapDeps([172,3]));return await t.load(),(r,i)=>{const u=t.execute(c(r));return e(o,n(i),u)}}),distance:_("distance",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-BwK-xJrJ.js").then(n=>n.H),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convertFromSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertFromSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-CHo8Fnbf.js").then(i=>i.e);return{convertFromSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([172,3]));return(n,r,i)=>{const u=t.execute(c(n),c(r));return e(n.spatialReference,o(i),u)}}),densify:_("densify",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-BwK-xJrJ.js").then(n=>n.E),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertToSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-CHo8Fnbf.js").then(i=>i.e);return{convertToSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([172,3]));return(n,r,i)=>(r=e(o(i),n.spatialReference,r),s(t.execute(c(n),r)))}),geodeticDensify:_("geodeticDensify",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-BwK-xJrJ.js").then(r=>r.X),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convert:e,meters:o,toLengthUnit:n}=await a(async()=>{const{convert:r,meters:i,toLengthUnit:u}=await import("./unitConversion-CHo8Fnbf.js").then(E=>E.e);return{convert:r,meters:i,toLengthUnit:u}},__vite__mapDeps([172,3]));return await t.load(),(r,i,u)=>(i=e(n(u),o,i),s(t.execute(c(r),i)))}),generalize:_("generalize",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-BwK-xJrJ.js").then(n=>n.N),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertToSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-CHo8Fnbf.js").then(i=>i.e);return{convertToSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([172,3]));return(n,r,i,u)=>(r=e(o(i),n.spatialReference,r),s(t.execute(c(n),r,u)))}),buffer:_("buffer",async()=>{const t=await a(()=>import("./bufferOperator-DsH4Se8c.js"),__vite__mapDeps([238,3,218,2,1,219,4])),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertToSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-CHo8Fnbf.js").then(i=>i.e);return{convertToSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([172,3]));return(n,r,i)=>(r=e(o(i),n.spatialReference,r),t.execute(n,r))}),geodesicBuffer:_("geodesicBuffer",async()=>{const t=await a(()=>import("./geodesicBufferOperator-COGEmI99.js"),__vite__mapDeps([239,3,217,2,203])),{convert:e,meters:o,toLengthUnit:n}=await a(async()=>{const{convert:r,meters:i,toLengthUnit:u}=await import("./unitConversion-CHo8Fnbf.js").then(E=>E.e);return{convert:r,meters:i,toLengthUnit:u}},__vite__mapDeps([172,3]));return await t.load(),(r,i,u)=>(i=e(n(u),o,i),t.execute(r,i))}),offset:_("offset",async()=>{const t=await a(()=>import("./offsetOperator-C2rBjXw_.js"),__vite__mapDeps([240,3,222,2,1,4])),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertToSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-CHo8Fnbf.js").then(i=>i.e);return{convertToSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([172,3]));return(n,r,i,u)=>(r=e(o(i),n.spatialReference,r),t.execute(n,r,u))}),rotate:_("rotate",async()=>{const t=await a(()=>import("./operators-Bp1kTpiU.js").then(o=>o.Z),__vite__mapDeps([215,3,2,1,216,4,217,203,202,218,219,220,10,221,6,222,15,223,8,224,12])),{default:e}=await a(async()=>{const{default:o}=await import("./operators-Bp1kTpiU.js").then(n=>n.Y);return{default:o}},__vite__mapDeps([215,3,2,1,216,4,217,203,202,218,219,220,10,221,6,222,15,223,8,224,12]));return(o,n,r,i)=>{const u=new e().rotate(n,r,i);return s(t.execute(c(o),u))}}),centroid:_("centroid",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-BwK-xJrJ.js").then(e=>e.y),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return e=>s(t.execute(c(e)))}),labelPoint:_("labelPoint",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-BwK-xJrJ.js").then(e=>e.Z),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return e=>s(t.execute(c(e)))}),simplify:_("simplify",()=>a(()=>import("./simplifyOperator-BAT7KkTF.js"),__vite__mapDeps([241,223,2,1,3,4])).then(t=>t.execute)),isSimple:_("isSimple",()=>a(()=>import("./simplifyOperator-BAT7KkTF.js"),__vite__mapDeps([241,223,2,1,3,4])).then(t=>t.isSimple)),convexHull:_("convexHull",()=>a(()=>import("./convexHullOperator-UlASyzKA.js"),__vite__mapDeps([242,220,2,1,3,4])).then(t=>t.execute)),getNearestCoordinate:_("getNearestCoordinate",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-BwK-xJrJ.js").then(e=>e._),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o,n)=>{const r=t.getNearestCoordinate(c(e),c(o),n);return{...r,coordinate:s(r.coordinate)}}}),getNearestVertex:_("getNearestVertex",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-BwK-xJrJ.js").then(e=>e._),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o)=>{const n=t.getNearestVertex(c(e),c(o));return{...n,coordinate:s(n.coordinate)}}})};function d(t,e){const o=p[t];return o.loaded?o.execute.apply(void 0,e):o.load().then(()=>d(t,e))}export{d as invokeGeometryOp};
