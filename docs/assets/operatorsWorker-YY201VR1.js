const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/disjointOperator-BT-TYkMO.js","assets/ProjectionTransformation-B0DUPjEi.js","assets/SimpleGeometryCursor-B92kdZ15.js","assets/index-DJGFuZJs.js","assets/jsonConverter-CKVDqeVi.js","assets/intersectsOperator-DUCSlTjW.js","assets/OperatorIntersects-Cacy1Hgo.js","assets/touchesOperator-CnzNeB08.js","assets/OperatorTouches-CBgtnB8q.js","assets/crossesOperator-BuJIdxZs.js","assets/OperatorCrosses-D-bxLPaB.js","assets/withinOperator-NiHscNUb.js","assets/OperatorWithin-Cfftrbpd.js","assets/containsOperator-BL9KhbnQ.js","assets/overlapsOperator-DpFAk2-Y.js","assets/OperatorOverlaps-hYkljRPj.js","assets/OperatorGeodeticLength-CV3MR7AG.js","assets/SceneLayerWorker-pidFEiYA.js","assets/MeshLocalVertexSpace-BOxZ4j1Y.js","assets/vec3-BbXHxfa_.js","assets/projectVectorToVector-BNp5bSEU.js","assets/projectPointToVector-5DhvCJ0n.js","assets/sphere-Bs_peckB.js","assets/mat3f64-q3fE-ZOt.js","assets/plane-DciXsG8m.js","assets/mat4f64-Dk4dwAN8.js","assets/quatf64-aQ5IuZRd.js","assets/I3SBinaryReader-BcgYBVOq.js","assets/VertexAttribute-Cq4MnHjR.js","assets/edgeUtils-C9ZUeNhe.js","assets/floatRGBA-B2U740va.js","assets/NormalAttribute.glsl-C6GNu9eJ.js","assets/glsl-BH37Aalp.js","assets/ShaderOutput-DnYY5J1_.js","assets/BindType-BBwFZqyN.js","assets/orientedBoundingBox-oo5jB47C.js","assets/quat-0h8XN70G.js","assets/spatialReferenceEllipsoidUtils-DNaTHBnO.js","assets/computeTranslationToOriginAndRotation-B8L6vqpD.js","assets/popupUtils-DQdWV7dm.js","assets/associatedFeatureServiceUtils-teTNKOY3.js","assets/SketchOptions-CAtbkqem.js","assets/geodesicUtils-Bu_GZrAj.js","assets/quantityUtils-Dl0jCqxL.js","assets/utils-Bmihqr65.js","assets/quantizationUtils-BXWRLLRu.js","assets/utils-bI6IUqdH.js","assets/FeatureLayerSource-BN_hkKaB.js","assets/meshVertexSpaceUtils-kBgupcw3.js","assets/MeshTransform-BDJyAxDF.js","assets/axisAngleDegrees-DFeKVmBu.js","assets/editingSupport-DQRPmjlB.js","assets/query-B6pwHQ-P.js","assets/pbfQueryUtils-Bsky0jQ1.js","assets/pbf-C20YoutM.js","assets/memoryEstimations-CTuoo_MI.js","assets/OptimizedFeatureSet-DJ9SOS6T.js","assets/executeQueryJSON-DlgNrsuk.js","assets/featureConversionUtils-CzhrurX-.js","assets/layersCreator-Bzp8E8Mc.js","assets/loadUtils-CBzu4Xy7.js","assets/fetchService-9BWoA2bm.js","assets/lazyLayerLoader-Bt4-Es7e.js","assets/portalLayers-D1iWsyws.js","assets/saveUtils-D1DZ2TtJ.js","assets/multiOriginJSONSupportUtils-C0wm8_Yw.js","assets/ImageryTileLayerView2D-vqz-DFQD.js","assets/RasterVFDisplayObject-hUqfVbam.js","assets/VertexArrayObject-VOLdW0eP.js","assets/VertexElementDescriptor-BLyltQyJ.js","assets/dataUtils-DVJiFX9x.js","assets/WGLContainer-D--bs_qo.js","assets/dataViewUtils-B17h2x-Y.js","assets/ProgramTemplate-DOxCSRLB.js","assets/vec3f32-nZdmKIgz.js","assets/Container-DJunj-OR.js","assets/config-DPSAGN04.js","assets/earcut-D9gy186-.js","assets/LayerView-CtWLWk2a.js","assets/layerViewUtils-CsNerFTF.js","assets/rasterUtils-D0QUOABG.js","assets/VertexStream-CcW1wkVr.js","assets/utils-BBZlPdf_.js","assets/FramebufferObject-fhdHX_uz.js","assets/TileContainer-D_4hIne1.js","assets/rasterProjectionHelper-AVvwgZHQ.js","assets/timeSupport-CjfHo-F4.js","assets/RefreshableLayerView-CIInS7Mv.js","assets/RasterWorker-BDBA4eFw.js","assets/_commonjsHelpers-DCkdB7M8.js","assets/colorUtils-BBQ_f_hl.js","assets/ElevationLayer-DCkfQNuL.js","assets/ByteSizeUnit-BsxeN7wM.js","assets/WorkerHandle-ty-yKCbw.js","assets/editingTools-DgkKqJqn.js","assets/interfaces-CxPbtTK0.js","assets/VerticalOffset.glsl-NhMbZhao.js","assets/Indices-m-O-ZW1n.js","assets/InterleavedLayout-Etq--Fqk.js","assets/BufferView-CD-xaDCo.js","assets/triangle-DXoOiLJ5.js","assets/lineSegment-p0sd9HAV.js","assets/renderState-Cx2c7yt3.js","assets/boundedPlane-D_apE-GD.js","assets/requestImageUtils-DL3G8dSt.js","assets/TextureFormat-1mYWTFa-.js","assets/ShaderBuilder-C6DgNizX.js","assets/triangulationUtils-CAzTw8QG.js","assets/deduplicate-D_1QoY-O.js","assets/RibbonLine.glsl-BN6lbMsK.js","assets/HUDVisibility.glsl-BMLf8tVW.js","assets/doublePrecisionUtils-B0owpBza.js","assets/hydratedFeatures-D6EjI15b.js","assets/Octree-zTfKT3q3.js","assets/HUDMaterial-CKfiyb08.js","assets/NestedMap-GuqgquCN.js","assets/RouteLayerInteraction-DVqOTNFx.js","assets/GraphicsLayer-BcZQSQAa.js","assets/RouteLayerView2D-DDG2NOPI.js","assets/GraphicContainer-5Ij6sjv_.js","assets/AGraphicContainer-B6SHCZek.js","assets/TechniqueInstance-5UAYsnSx.js","assets/UpdateTracking2D-lRlFqL2D.js","assets/BidiEngine-QXap_35O.js","assets/Rect-CMBnLo4V.js","assets/rasterizingUtils-BqiSm15O.js","assets/FeatureCommandQueue-DdhxV9Pf.js","assets/TechniqueType-uMFRS8dR.js","assets/GraphShaderModule-CrmpWIQd.js","assets/QueueProcessor-DuvVnHy_.js","assets/GraphicsView2D-BUwUhbJ0.js","assets/OverrideHelper-UuYWEr92.js","assets/FeatureMetadata-Dh60p4wM.js","assets/queryUtils-CH7a4ryM.js","assets/json-Wa8cmqdu.js","assets/timeSupport-Duhqoo8w.js","assets/TimeOnly-DhwemJke.js","assets/dehydratedFeatures-CWi5ARB2.js","assets/automaticLengthMeasurementUtils-RKhy_rt0.js","assets/memoize-DmxaQ-k8.js","assets/unitFormatUtils-BgksSFBW.js","assets/geodesicLengthMeasurementUtils-DMAU1D8e.js","assets/geometryEngineBase-B0ZyeKAX.js","assets/hydrated-CVaIgpwV.js","assets/glUtil-DN5RyOnP.js","assets/automaticAreaMeasurementUtils-Bldb06aa.js","assets/PointSnappingHint-CBvSgf73.js","assets/editPlaneUtils-D9VosDvr.js","assets/ReactiveSet-iNGh0UZr.js","assets/SelectedVertexTooltipInfo-B80mVfv4.js","assets/TranslateTooltipInfo-nCs7MtgY.js","assets/utils-CCMSi-tJ.js","assets/cimSymbolUtils-nX8vFK6G.js","assets/ExtentScaleTooltipInfo-BxCFHyf0.js","assets/GraphicManipulator-BCjwnCt9.js","assets/drapedUtils-D5bemcGs.js","assets/KMLLayerView2D-vGfiaKWx.js","assets/BitmapTechnique-BfY1MQmk.js","assets/BitmapContainer-BkQx8fLr.js","assets/MaterialPrograms-DWYyhsUO.js","assets/webglDeps-BkFN_faj.js","assets/testSVGPremultipliedAlpha-02ROF4g1.js","assets/FeatureLayerView2D-CvGLXrgE.js","assets/AttributeBinsFeatureSet-BAuax14h.js","assets/AttributeBinsQuery-CAPu1Qu7.js","assets/FixedIntervalBinParameters-D9xKRjJ8.js","assets/CircularArray-CujHzHWW.js","assets/SDFHelper-DzPHxgyx.js","assets/parquet-C9fkEBvU.js","assets/floorFilterUtils-DZ5C6FQv.js","assets/knowledgegraph-DNQK-rpC.js","assets/arcade-Dvc6WtXi.js","assets/unitConversion-DCUBekSC.js","assets/ImmutableArray-BPVd6ESQ.js","assets/shared-xvF7H7B8.js","assets/number-B-j_vF8P.js","assets/WhereClause-BIDqQ9c4.js","assets/portalUtils-CT3dgyoX.js","assets/executeQueryForSnapping-CSBPFtek.js","assets/PooledRBush-DrAfvgCO.js","assets/optimizedFeatureQueryEngineAdapter-DY0YIcmX.js","assets/QueryEngine-CSVJYzqk.js","assets/WhereClauseCache-_kywlP7r.js","assets/SnappingCandidate-DGkpYqI6.js","assets/MapImageLayerView2D-eeMM-Nby.js","assets/HighlightGraphicContainer-KhDutnR6.js","assets/ExportStrategy-CZl3I8SR.js","assets/MapServiceLayerViewHelper-DVAqt8DA.js","assets/MemorySourceWorker-Ypc6TT4T.js","assets/sourceUtils-B5ONAEBb.js","assets/date-Ctp1FiBW.js","assets/MediaLayerView2D-CRkVFCo5.js","assets/enums-BRzLM11V.js","assets/GridShader-vh7-j3aV.js","assets/PieChartMeshWriter-Bw0OdALe.js","assets/libtess-YzZElrl7.js","assets/utils-TCLx-tN4.js","assets/grouping-DZhaRTmr.js","assets/OverlayContainer-HHRDgmbe.js","assets/utils-ehcGqGxa.js","assets/FeaturePipelineWorker-DGB4jP7k.js","assets/MeshWriterRegistry-1IhLuKhu.js","assets/operatorGeodeticDensify-BWwkL6Ab.js","assets/geodeticCurveType-CirnHLSB.js","assets/geojson-UAc2YlmS.js","assets/PointCloudWorker-BrSepl3n.js","assets/uploadAssets-CjJXXOww.js","assets/meshFeatureAttributes-Bgm4sSZh.js","assets/SourceLayerData-BoDV1WNZ.js","assets/VideoLayerView2D-Dw2WcQe8.js","assets/webdocSaveUtils-F_4XoNg6.js","assets/basemapUtils-4-rpLSW3.js","assets/resourceUtils-DgtTSAaY.js","assets/WFSSourceWorker-CTXi-zm3.js","assets/WMSLayerView2D-Bl8Nv8X8.js","assets/operators-JH7kf0EU.js","assets/apiConverter-BD9zTcBI.js","assets/operatorGeodesicBuffer-Ba9JS8gL.js","assets/operatorBuffer-CQMNzfaV.js","assets/GeometryCleaner-BEJM7I4l-Dkow9vCN.js","assets/operatorConvexHull-C-lKp_oM.js","assets/operatorIntersection-4UgjMj_v.js","assets/operatorOffset-DrbEKCxL.js","assets/operatorSimplify-Jtv7QIUN.js","assets/operatorUnion-DtK95zY7.js","assets/MeshComponent-Bauj3zBR.js","assets/meshProperties-C4iW0Ukm.js","assets/MeshVertexAttributes-BaDzhshm.js","assets/vec4-YNcvsXt7.js","assets/loader-CtLGFFKO.js","assets/objectResourceUtils-DQllpPTW.js","assets/devEnvironmentUtils-CnNDiFMM.js","assets/DefaultMaterial-ZC4XOnlt.js","assets/vertexSpaceConversion-Db_1UnBh.js","assets/featureLayerUtils-BcrFbYXf.js","assets/intersectionOperator-DkcZ_OCB.js","assets/unionOperator-Dw9bdkhq.js","assets/lengthOperator-BBowDgn_.js","assets/bufferOperator-C-cV5YG3.js","assets/geodesicBufferOperator-CXGaO5Ff.js","assets/offsetOperator-CA7YbpVB.js","assets/simplifyOperator-gp-6hF9e.js","assets/convexHullOperator-qZarObf-.js"])))=>i.map(i=>d[i]);
import{aP as a,ca as c}from"./index-DJGFuZJs.js";function _(t,e){let o;return{loaded:!1,load:()=>o??(o=e().then(n=>{p[t]={loaded:!0,execute:n}}))}}function s(t){return t==null?null:t.toJSON()}const p={disjoint:_("disjoint",()=>a(()=>import("./disjointOperator-BT-TYkMO.js"),__vite__mapDeps([0,1,2,3,4])).then(t=>t.execute)),intersects:_("intersects",()=>a(()=>import("./intersectsOperator-DUCSlTjW.js"),__vite__mapDeps([5,6,1,2,3,4])).then(t=>t.execute)),touches:_("touches",()=>a(()=>import("./touchesOperator-CnzNeB08.js"),__vite__mapDeps([7,8,1,2,3,4])).then(t=>t.execute)),crosses:_("crosses",()=>a(()=>import("./crossesOperator-BuJIdxZs.js"),__vite__mapDeps([9,10,1,2,3,4])).then(t=>t.execute)),within:_("within",()=>a(()=>import("./withinOperator-NiHscNUb.js"),__vite__mapDeps([11,12,1,2,3,4])).then(t=>t.execute)),contains:_("contains",()=>a(()=>import("./containsOperator-BL9KhbnQ.js"),__vite__mapDeps([13,1,2,3,4])).then(t=>t.execute)),overlaps:_("overlaps",()=>a(()=>import("./overlapsOperator-DpFAk2-Y.js"),__vite__mapDeps([14,15,1,2,3,4])).then(t=>t.execute)),equals:_("equals",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CV3MR7AG.js").then(e=>e.J),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o)=>t.execute(c(e),c(o))}),relate:_("relate",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CV3MR7AG.js").then(e=>e.$),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o,n)=>t.execute(c(e),c(o),n)}),intersection:_("intersection",()=>a(()=>import("./intersectionOperator-DkcZ_OCB.js"),__vite__mapDeps([235,3,221,2,1,4])).then(t=>t.execute)),union:_("union",()=>a(()=>import("./unionOperator-Dw9bdkhq.js"),__vite__mapDeps([236,224,2,1,3,4])).then(t=>t.executeMany)),difference:_("difference",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CV3MR7AG.js").then(e=>e.F),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o)=>s(t.execute(c(e),c(o)))}),symmetricDifference:_("symmetricDifference",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CV3MR7AG.js").then(e=>e.a0),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o)=>s(t.execute(c(e),c(o)))}),clip:_("clip",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CV3MR7AG.js").then(e=>e.z),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o)=>s(t.execute(c(e),c(o)))}),cut:_("cut",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CV3MR7AG.js").then(e=>e.A),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o)=>t.execute(c(e),c(o)).map(n=>s(n))}),area:_("area",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CV3MR7AG.js").then(n=>n.x),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convertFromSpatialReferenceUnit:e,toAreaUnit:o}=await a(async()=>{const{convertFromSpatialReferenceUnit:n,toAreaUnit:r}=await import("./unitConversion-DCUBekSC.js").then(i=>i.e);return{convertFromSpatialReferenceUnit:n,toAreaUnit:r}},__vite__mapDeps([172,3]));return(n,r)=>{const i=t.execute(c(n));return e(n.spatialReference,o(r),i)}}),geodeticArea:_("geodeticArea",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CV3MR7AG.js").then(r=>r.Q),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convert:e,squareMeters:o,toAreaUnit:n}=await a(async()=>{const{convert:r,squareMeters:i,toAreaUnit:u}=await import("./unitConversion-DCUBekSC.js").then(E=>E.e);return{convert:r,squareMeters:i,toAreaUnit:u}},__vite__mapDeps([172,3]));return await t.load(),(r,i)=>{const u=t.execute(c(r));return e(o,n(i),u)}}),length:_("length",async()=>{const t=await a(()=>import("./lengthOperator-BBowDgn_.js"),__vite__mapDeps([237,3,4,1,2])),{convertFromSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertFromSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-DCUBekSC.js").then(i=>i.e);return{convertFromSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([172,3]));return(n,r)=>{const i=t.execute(n);return e(n.spatialReference,o(r),i)}}),geodeticLength:_("geodeticLength",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CV3MR7AG.js").then(r=>r.Y),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convert:e,meters:o,toLengthUnit:n}=await a(async()=>{const{convert:r,meters:i,toLengthUnit:u}=await import("./unitConversion-DCUBekSC.js").then(E=>E.e);return{convert:r,meters:i,toLengthUnit:u}},__vite__mapDeps([172,3]));return await t.load(),(r,i)=>{const u=t.execute(c(r));return e(o,n(i),u)}}),distance:_("distance",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CV3MR7AG.js").then(n=>n.H),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convertFromSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertFromSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-DCUBekSC.js").then(i=>i.e);return{convertFromSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([172,3]));return(n,r,i)=>{const u=t.execute(c(n),c(r));return e(n.spatialReference,o(i),u)}}),densify:_("densify",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CV3MR7AG.js").then(n=>n.E),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertToSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-DCUBekSC.js").then(i=>i.e);return{convertToSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([172,3]));return(n,r,i)=>(r=e(o(i),n.spatialReference,r),s(t.execute(c(n),r)))}),geodeticDensify:_("geodeticDensify",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CV3MR7AG.js").then(r=>r.X),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convert:e,meters:o,toLengthUnit:n}=await a(async()=>{const{convert:r,meters:i,toLengthUnit:u}=await import("./unitConversion-DCUBekSC.js").then(E=>E.e);return{convert:r,meters:i,toLengthUnit:u}},__vite__mapDeps([172,3]));return await t.load(),(r,i,u)=>(i=e(n(u),o,i),s(t.execute(c(r),i)))}),generalize:_("generalize",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CV3MR7AG.js").then(n=>n.N),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertToSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-DCUBekSC.js").then(i=>i.e);return{convertToSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([172,3]));return(n,r,i,u)=>(r=e(o(i),n.spatialReference,r),s(t.execute(c(n),r,u)))}),buffer:_("buffer",async()=>{const t=await a(()=>import("./bufferOperator-C-cV5YG3.js"),__vite__mapDeps([238,3,218,2,1,219,4])),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertToSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-DCUBekSC.js").then(i=>i.e);return{convertToSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([172,3]));return(n,r,i)=>(r=e(o(i),n.spatialReference,r),t.execute(n,r))}),geodesicBuffer:_("geodesicBuffer",async()=>{const t=await a(()=>import("./geodesicBufferOperator-CXGaO5Ff.js"),__vite__mapDeps([239,3,217,2,203])),{convert:e,meters:o,toLengthUnit:n}=await a(async()=>{const{convert:r,meters:i,toLengthUnit:u}=await import("./unitConversion-DCUBekSC.js").then(E=>E.e);return{convert:r,meters:i,toLengthUnit:u}},__vite__mapDeps([172,3]));return await t.load(),(r,i,u)=>(i=e(n(u),o,i),t.execute(r,i))}),offset:_("offset",async()=>{const t=await a(()=>import("./offsetOperator-CA7YbpVB.js"),__vite__mapDeps([240,3,222,2,1,4])),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertToSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-DCUBekSC.js").then(i=>i.e);return{convertToSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([172,3]));return(n,r,i,u)=>(r=e(o(i),n.spatialReference,r),t.execute(n,r,u))}),rotate:_("rotate",async()=>{const t=await a(()=>import("./operators-JH7kf0EU.js").then(o=>o.Z),__vite__mapDeps([215,3,2,1,216,4,217,203,202,218,219,220,10,221,6,222,15,223,8,224,12])),{default:e}=await a(async()=>{const{default:o}=await import("./operators-JH7kf0EU.js").then(n=>n.Y);return{default:o}},__vite__mapDeps([215,3,2,1,216,4,217,203,202,218,219,220,10,221,6,222,15,223,8,224,12]));return(o,n,r,i)=>{const u=new e().rotate(n,r,i);return s(t.execute(c(o),u))}}),centroid:_("centroid",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CV3MR7AG.js").then(e=>e.y),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return e=>s(t.execute(c(e)))}),labelPoint:_("labelPoint",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CV3MR7AG.js").then(e=>e.Z),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return e=>s(t.execute(c(e)))}),simplify:_("simplify",()=>a(()=>import("./simplifyOperator-gp-6hF9e.js"),__vite__mapDeps([241,223,2,1,3,4])).then(t=>t.execute)),isSimple:_("isSimple",()=>a(()=>import("./simplifyOperator-gp-6hF9e.js"),__vite__mapDeps([241,223,2,1,3,4])).then(t=>t.isSimple)),convexHull:_("convexHull",()=>a(()=>import("./convexHullOperator-qZarObf-.js"),__vite__mapDeps([242,220,2,1,3,4])).then(t=>t.execute)),getNearestCoordinate:_("getNearestCoordinate",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CV3MR7AG.js").then(e=>e._),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o,n)=>{const r=t.getNearestCoordinate(c(e),c(o),n);return{...r,coordinate:s(r.coordinate)}}}),getNearestVertex:_("getNearestVertex",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-CV3MR7AG.js").then(e=>e._),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o)=>{const n=t.getNearestVertex(c(e),c(o));return{...n,coordinate:s(n.coordinate)}}})};function d(t,e){const o=p[t];return o.loaded?o.execute.apply(void 0,e):o.load().then(()=>d(t,e))}export{d as invokeGeometryOp};
