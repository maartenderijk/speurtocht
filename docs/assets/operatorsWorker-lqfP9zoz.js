const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/disjointOperator-CVk0M4W_.js","assets/ProjectionTransformation-D4HNpuWV.js","assets/SimpleGeometryCursor-B92kdZ15.js","assets/index-BHVnKyhT.js","assets/jsonConverter-Bum4XOSw.js","assets/intersectsOperator-BWqWVdC9.js","assets/OperatorIntersects-CSh4aY1u.js","assets/touchesOperator-DZFjWkwu.js","assets/OperatorTouches-COf3wNKQ.js","assets/crossesOperator-BqlAd6jK.js","assets/OperatorCrosses-CVwDtwxl.js","assets/withinOperator-Dk54TyXr.js","assets/OperatorWithin-CY8J8cO1.js","assets/containsOperator-DhNJA_cd.js","assets/overlapsOperator-Cg8ch9sf.js","assets/OperatorOverlaps-Cj0CQSkF.js","assets/OperatorGeodeticLength-DyGsqk2D.js","assets/SceneLayerWorker-C7jKELPx.js","assets/MeshLocalVertexSpace-Bk8p_RUS.js","assets/vec3-BEfrtMyl.js","assets/projectVectorToVector-C7pWyYZJ.js","assets/projectPointToVector-CpLCxy_S.js","assets/sphere-Cxz_-0YC.js","assets/mat3f64-q3fE-ZOt.js","assets/plane-CSG-07l9.js","assets/mat4f64-Dk4dwAN8.js","assets/quatf64-aQ5IuZRd.js","assets/I3SBinaryReader-B2AKs2N0.js","assets/VertexAttribute-Cq4MnHjR.js","assets/edgeUtils-CfebdfKn.js","assets/floatRGBA-Cql13dfU.js","assets/NormalAttribute.glsl-DTx4yN3c.js","assets/glsl-BH37Aalp.js","assets/ShaderOutput-DnYY5J1_.js","assets/BindType-BBwFZqyN.js","assets/orientedBoundingBox-DnDVxa0X.js","assets/quat-DpJVz7ox.js","assets/spatialReferenceEllipsoidUtils-DiMo9y2J.js","assets/computeTranslationToOriginAndRotation-Ctz-Qpl9.js","assets/popupUtils-CDvDhG9b.js","assets/associatedFeatureServiceUtils-KGvLRvFR.js","assets/SketchOptions-e8bkOxO2.js","assets/geodesicUtils-ovsB0bNf.js","assets/quantityUtils-Bkjx7W3f.js","assets/utils-Ddkq7Rt-.js","assets/quantizationUtils-D7JV8TFB.js","assets/utils-Cm2YL9wF.js","assets/FeatureLayerSource-BNpkfRi0.js","assets/meshVertexSpaceUtils-CxBe8FOT.js","assets/MeshTransform-CvId4_bT.js","assets/axisAngleDegrees-ztj7DR2f.js","assets/editingSupport-CFG-Bs7Y.js","assets/query-CFRkR4Kt.js","assets/pbfQueryUtils-Dj6QSXlZ.js","assets/pbf-a_p0sNEc.js","assets/memoryEstimations-BUE6DQXJ.js","assets/OptimizedFeatureSet-Cn6HMkdb.js","assets/executeQueryJSON-DacJYBKO.js","assets/featureConversionUtils-l2BVzl9X.js","assets/layersCreator-CQa3yj7c.js","assets/loadUtils-zAZ8yDv2.js","assets/fetchService-DVjK69tw.js","assets/lazyLayerLoader-DQxhQWb9.js","assets/portalLayers-Be7FvyV9.js","assets/saveUtils-CPjjUHLd.js","assets/multiOriginJSONSupportUtils-C0wm8_Yw.js","assets/ImageryTileLayerView2D-YR1gKFwr.js","assets/RasterVFDisplayObject-YyZmArxe.js","assets/VertexArrayObject-ClhX_t7T.js","assets/VertexElementDescriptor-BLyltQyJ.js","assets/dataUtils-Ds2ZZkea.js","assets/WGLContainer-Cg1TGbst.js","assets/dataViewUtils-ep6eogYV.js","assets/ProgramTemplate-BhaNcNBO.js","assets/vec3f32-nZdmKIgz.js","assets/Container-BHdaAQk1.js","assets/config-Dr-jlMOW.js","assets/earcut-D9gy186-.js","assets/LayerView-BrpKobh9.js","assets/layerViewUtils-QkZfw_iD.js","assets/rasterUtils-rpZiyvyK.js","assets/VertexStream-Cgpo8bQo.js","assets/utils-Bcabfuuj.js","assets/FramebufferObject-CjTOOEjF.js","assets/TileContainer-Dzxw3koD.js","assets/rasterProjectionHelper-CvUgcWlC.js","assets/timeSupport-DrcSpr4o.js","assets/RefreshableLayerView-D9HYp1sh.js","assets/RasterWorker-XBQB_0rJ.js","assets/_commonjsHelpers-DCkdB7M8.js","assets/colorUtils-Cd5-qIll.js","assets/ElevationLayer-BoG8F6PL.js","assets/ByteSizeUnit-BsxeN7wM.js","assets/WorkerHandle-CFZsk6Ml.js","assets/editingTools-DIZ_XSP3.js","assets/interfaces-CV2JBTP8.js","assets/VerticalOffset.glsl-BM_GezOI.js","assets/Indices-BVHo2M6k.js","assets/InterleavedLayout-CxSY2Vef.js","assets/BufferView-CkAzLrFo.js","assets/triangle-CtFRQBha.js","assets/lineSegment-EtfzruBR.js","assets/renderState-BBH8Fe3_.js","assets/boundedPlane-Bl58ytIa.js","assets/requestImageUtils-Bju8-S2c.js","assets/TextureFormat-1mYWTFa-.js","assets/ShaderBuilder-CTTP6Baf.js","assets/triangulationUtils-D5tbWGtQ.js","assets/deduplicate-BRaLgD5Z.js","assets/RibbonLine.glsl-D4xUzdci.js","assets/HUDVisibility.glsl-T_rzldki.js","assets/doublePrecisionUtils-B0owpBza.js","assets/hydratedFeatures-Dvhu7dzM.js","assets/Octree-C0BvsxdA.js","assets/HUDMaterial-Clz1guYg.js","assets/NestedMap-GuqgquCN.js","assets/RouteLayerInteraction-DXMNkfXt.js","assets/GraphicsLayer-CRVwdq2F.js","assets/RouteLayerView2D-Bvat8LjS.js","assets/GraphicContainer-Dbz0XukG.js","assets/AGraphicContainer-CF85rCUf.js","assets/TechniqueInstance-B-MRt030.js","assets/UpdateTracking2D-BCoQRp-R.js","assets/BidiEngine-QXap_35O.js","assets/Rect-Dbkov3pw.js","assets/rasterizingUtils-C82vF-tV.js","assets/FeatureCommandQueue-0MiMkjMa.js","assets/TechniqueType-uMFRS8dR.js","assets/GraphShaderModule-ZTsUlqJ0.js","assets/QueueProcessor-Aqz3LJk0.js","assets/GraphicsView2D-COgF-Qw3.js","assets/OverrideHelper-B20VC_xN.js","assets/FeatureMetadata-DvNNxeZV.js","assets/queryUtils-CKDmdfmI.js","assets/json-Wa8cmqdu.js","assets/timeSupport-B94wrQIy.js","assets/TimeOnly-vyU5_moK.js","assets/dehydratedFeatures-BnVBisL0.js","assets/automaticLengthMeasurementUtils-Bs5mZf9U.js","assets/memoize-DmxaQ-k8.js","assets/unitFormatUtils-tzyBR35g.js","assets/geodesicLengthMeasurementUtils-BJQhmpHi.js","assets/geometryEngineBase-B0ZyeKAX.js","assets/hydrated-DuiOJyz8.js","assets/glUtil-BKOBqoKN.js","assets/automaticAreaMeasurementUtils-BYPmNAzD.js","assets/PointSnappingHint-CN0fCghu.js","assets/editPlaneUtils-BK2Cpbbr.js","assets/ReactiveSet-CETE6x7a.js","assets/SelectedVertexTooltipInfo-CwtwTVIj.js","assets/TranslateTooltipInfo-BKamrHod.js","assets/utils-BWoI8wJY.js","assets/cimSymbolUtils-CHlky-8v.js","assets/ExtentScaleTooltipInfo-DcsqBA7y.js","assets/GraphicManipulator-fNyTPbkb.js","assets/drapedUtils-C1fEcFlM.js","assets/KMLLayerView2D-RJi130Hf.js","assets/BitmapTechnique-CKQ1MlQQ.js","assets/BitmapContainer-DegptLcC.js","assets/MaterialPrograms-qfD-TWWu.js","assets/webglDeps-_uiTASqT.js","assets/testSVGPremultipliedAlpha-Cmp-vLZC.js","assets/FeatureLayerView2D-BOhNADmG.js","assets/AttributeBinsFeatureSet-BupiFyOJ.js","assets/AttributeBinsQuery-DyXi_YVB.js","assets/FixedIntervalBinParameters-wjgQWWn0.js","assets/CircularArray-CujHzHWW.js","assets/SDFHelper-BVeazlIg.js","assets/parquet-sjZTuNNS.js","assets/floorFilterUtils-DZ5C6FQv.js","assets/knowledgegraph-BbhXtc75.js","assets/arcade-cqNDEmx4.js","assets/unitConversion-BY0Zx9_a.js","assets/ImmutableArray-BPVd6ESQ.js","assets/shared-Aw_ROYo_.js","assets/number-DbgvKYaj.js","assets/WhereClause-DMg0KBK-.js","assets/portalUtils-Bo7eHj0B.js","assets/executeQueryForSnapping-JRU3uuuS.js","assets/PooledRBush-DFm3cim3.js","assets/optimizedFeatureQueryEngineAdapter-Dk77a330.js","assets/QueryEngine-RYUx3d4u.js","assets/WhereClauseCache-Bp7lBIP3.js","assets/SnappingCandidate-DGkpYqI6.js","assets/MapImageLayerView2D-Dz2yuMAZ.js","assets/HighlightGraphicContainer-inPtpx-K.js","assets/ExportStrategy-Bd0-jXxn.js","assets/MapServiceLayerViewHelper-CxzGzDE0.js","assets/MemorySourceWorker-gxjrc3f0.js","assets/sourceUtils-BrARfvAs.js","assets/date-Ctp1FiBW.js","assets/MediaLayerView2D-DUrr3NUx.js","assets/enums-BRzLM11V.js","assets/GridShader-DixEkME3.js","assets/PieChartMeshWriter-C3ylS-9I.js","assets/libtess-CMHikT71.js","assets/utils-knhXbPKP.js","assets/grouping-BMTTc95b.js","assets/OverlayContainer-CZar53fe.js","assets/utils-ehcGqGxa.js","assets/FeaturePipelineWorker-DLWjt2El.js","assets/MeshWriterRegistry-B7XC5IV_.js","assets/operatorGeodeticDensify-BE6v5ab2.js","assets/geodeticCurveType-CirnHLSB.js","assets/geojson-Cv8eqYp_.js","assets/PointCloudWorker-DFsR45iz.js","assets/uploadAssets-BsdtZdjI.js","assets/meshFeatureAttributes-BJSo_xdV.js","assets/SourceLayerData-IkbKVDeu.js","assets/VideoLayerView2D-DM1n4dOT.js","assets/webdocSaveUtils-qwmXUMHT.js","assets/basemapUtils-DW0Vq7gA.js","assets/resourceUtils-0-oAeYoo.js","assets/WFSSourceWorker-DZLhxPOe.js","assets/WMSLayerView2D-vxDkjKLl.js","assets/operators-BbQrF5pu.js","assets/apiConverter-iGgdrg0j.js","assets/operatorGeodesicBuffer-LDHwMkS3.js","assets/operatorBuffer-VJ1zGm_y.js","assets/GeometryCleaner-BEJM7I4l-BDj84PCy.js","assets/operatorConvexHull-CRr_yYWO.js","assets/operatorIntersection-Bfi3sO0C.js","assets/operatorOffset-DiUefB5L.js","assets/operatorSimplify-D-Uc2PlU.js","assets/operatorUnion-Cgh5-A81.js","assets/MeshComponent-Bt_nWgPH.js","assets/meshProperties-C4iW0Ukm.js","assets/MeshVertexAttributes-0G08HTuC.js","assets/vec4-C3Ls6GiW.js","assets/loader-ClkK7NHs.js","assets/objectResourceUtils-D08xCyKl.js","assets/devEnvironmentUtils-CnNDiFMM.js","assets/DefaultMaterial-D4N7-rln.js","assets/vertexSpaceConversion-CD_YNmfv.js","assets/featureLayerUtils-D4LxMW-5.js","assets/intersectionOperator-BaloteSR.js","assets/unionOperator-DKuCc7Nw.js","assets/lengthOperator-Dt91jqgf.js","assets/bufferOperator-COP4nJLO.js","assets/geodesicBufferOperator-fqTuINay.js","assets/offsetOperator-7oivuOzi.js","assets/simplifyOperator-D_b6Ie6s.js","assets/convexHullOperator-BW0xmeZl.js"])))=>i.map(i=>d[i]);
import{aP as a,ca as c}from"./index-BHVnKyhT.js";function _(t,e){let o;return{loaded:!1,load:()=>o??(o=e().then(n=>{p[t]={loaded:!0,execute:n}}))}}function s(t){return t==null?null:t.toJSON()}const p={disjoint:_("disjoint",()=>a(()=>import("./disjointOperator-CVk0M4W_.js"),__vite__mapDeps([0,1,2,3,4])).then(t=>t.execute)),intersects:_("intersects",()=>a(()=>import("./intersectsOperator-BWqWVdC9.js"),__vite__mapDeps([5,6,1,2,3,4])).then(t=>t.execute)),touches:_("touches",()=>a(()=>import("./touchesOperator-DZFjWkwu.js"),__vite__mapDeps([7,8,1,2,3,4])).then(t=>t.execute)),crosses:_("crosses",()=>a(()=>import("./crossesOperator-BqlAd6jK.js"),__vite__mapDeps([9,10,1,2,3,4])).then(t=>t.execute)),within:_("within",()=>a(()=>import("./withinOperator-Dk54TyXr.js"),__vite__mapDeps([11,12,1,2,3,4])).then(t=>t.execute)),contains:_("contains",()=>a(()=>import("./containsOperator-DhNJA_cd.js"),__vite__mapDeps([13,1,2,3,4])).then(t=>t.execute)),overlaps:_("overlaps",()=>a(()=>import("./overlapsOperator-Cg8ch9sf.js"),__vite__mapDeps([14,15,1,2,3,4])).then(t=>t.execute)),equals:_("equals",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DyGsqk2D.js").then(e=>e.J),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o)=>t.execute(c(e),c(o))}),relate:_("relate",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DyGsqk2D.js").then(e=>e.$),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o,n)=>t.execute(c(e),c(o),n)}),intersection:_("intersection",()=>a(()=>import("./intersectionOperator-BaloteSR.js"),__vite__mapDeps([235,3,221,2,1,4])).then(t=>t.execute)),union:_("union",()=>a(()=>import("./unionOperator-DKuCc7Nw.js"),__vite__mapDeps([236,224,2,1,3,4])).then(t=>t.executeMany)),difference:_("difference",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DyGsqk2D.js").then(e=>e.F),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o)=>s(t.execute(c(e),c(o)))}),symmetricDifference:_("symmetricDifference",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DyGsqk2D.js").then(e=>e.a0),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o)=>s(t.execute(c(e),c(o)))}),clip:_("clip",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DyGsqk2D.js").then(e=>e.z),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o)=>s(t.execute(c(e),c(o)))}),cut:_("cut",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DyGsqk2D.js").then(e=>e.A),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o)=>t.execute(c(e),c(o)).map(n=>s(n))}),area:_("area",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DyGsqk2D.js").then(n=>n.x),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convertFromSpatialReferenceUnit:e,toAreaUnit:o}=await a(async()=>{const{convertFromSpatialReferenceUnit:n,toAreaUnit:r}=await import("./unitConversion-BY0Zx9_a.js").then(i=>i.e);return{convertFromSpatialReferenceUnit:n,toAreaUnit:r}},__vite__mapDeps([172,3]));return(n,r)=>{const i=t.execute(c(n));return e(n.spatialReference,o(r),i)}}),geodeticArea:_("geodeticArea",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DyGsqk2D.js").then(r=>r.Q),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convert:e,squareMeters:o,toAreaUnit:n}=await a(async()=>{const{convert:r,squareMeters:i,toAreaUnit:u}=await import("./unitConversion-BY0Zx9_a.js").then(E=>E.e);return{convert:r,squareMeters:i,toAreaUnit:u}},__vite__mapDeps([172,3]));return await t.load(),(r,i)=>{const u=t.execute(c(r));return e(o,n(i),u)}}),length:_("length",async()=>{const t=await a(()=>import("./lengthOperator-Dt91jqgf.js"),__vite__mapDeps([237,3,4,1,2])),{convertFromSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertFromSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-BY0Zx9_a.js").then(i=>i.e);return{convertFromSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([172,3]));return(n,r)=>{const i=t.execute(n);return e(n.spatialReference,o(r),i)}}),geodeticLength:_("geodeticLength",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DyGsqk2D.js").then(r=>r.Y),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convert:e,meters:o,toLengthUnit:n}=await a(async()=>{const{convert:r,meters:i,toLengthUnit:u}=await import("./unitConversion-BY0Zx9_a.js").then(E=>E.e);return{convert:r,meters:i,toLengthUnit:u}},__vite__mapDeps([172,3]));return await t.load(),(r,i)=>{const u=t.execute(c(r));return e(o,n(i),u)}}),distance:_("distance",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DyGsqk2D.js").then(n=>n.H),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convertFromSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertFromSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-BY0Zx9_a.js").then(i=>i.e);return{convertFromSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([172,3]));return(n,r,i)=>{const u=t.execute(c(n),c(r));return e(n.spatialReference,o(i),u)}}),densify:_("densify",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DyGsqk2D.js").then(n=>n.E),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertToSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-BY0Zx9_a.js").then(i=>i.e);return{convertToSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([172,3]));return(n,r,i)=>(r=e(o(i),n.spatialReference,r),s(t.execute(c(n),r)))}),geodeticDensify:_("geodeticDensify",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DyGsqk2D.js").then(r=>r.X),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convert:e,meters:o,toLengthUnit:n}=await a(async()=>{const{convert:r,meters:i,toLengthUnit:u}=await import("./unitConversion-BY0Zx9_a.js").then(E=>E.e);return{convert:r,meters:i,toLengthUnit:u}},__vite__mapDeps([172,3]));return await t.load(),(r,i,u)=>(i=e(n(u),o,i),s(t.execute(c(r),i)))}),generalize:_("generalize",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DyGsqk2D.js").then(n=>n.N),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234])),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertToSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-BY0Zx9_a.js").then(i=>i.e);return{convertToSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([172,3]));return(n,r,i,u)=>(r=e(o(i),n.spatialReference,r),s(t.execute(c(n),r,u)))}),buffer:_("buffer",async()=>{const t=await a(()=>import("./bufferOperator-COP4nJLO.js"),__vite__mapDeps([238,3,218,2,1,219,4])),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertToSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-BY0Zx9_a.js").then(i=>i.e);return{convertToSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([172,3]));return(n,r,i)=>(r=e(o(i),n.spatialReference,r),t.execute(n,r))}),geodesicBuffer:_("geodesicBuffer",async()=>{const t=await a(()=>import("./geodesicBufferOperator-fqTuINay.js"),__vite__mapDeps([239,3,217,2,203])),{convert:e,meters:o,toLengthUnit:n}=await a(async()=>{const{convert:r,meters:i,toLengthUnit:u}=await import("./unitConversion-BY0Zx9_a.js").then(E=>E.e);return{convert:r,meters:i,toLengthUnit:u}},__vite__mapDeps([172,3]));return await t.load(),(r,i,u)=>(i=e(n(u),o,i),t.execute(r,i))}),offset:_("offset",async()=>{const t=await a(()=>import("./offsetOperator-7oivuOzi.js"),__vite__mapDeps([240,3,222,2,1,4])),{convertToSpatialReferenceUnit:e,toLengthUnit:o}=await a(async()=>{const{convertToSpatialReferenceUnit:n,toLengthUnit:r}=await import("./unitConversion-BY0Zx9_a.js").then(i=>i.e);return{convertToSpatialReferenceUnit:n,toLengthUnit:r}},__vite__mapDeps([172,3]));return(n,r,i,u)=>(r=e(o(i),n.spatialReference,r),t.execute(n,r,u))}),rotate:_("rotate",async()=>{const t=await a(()=>import("./operators-BbQrF5pu.js").then(o=>o.Z),__vite__mapDeps([215,3,2,1,216,4,217,203,202,218,219,220,10,221,6,222,15,223,8,224,12])),{default:e}=await a(async()=>{const{default:o}=await import("./operators-BbQrF5pu.js").then(n=>n.Y);return{default:o}},__vite__mapDeps([215,3,2,1,216,4,217,203,202,218,219,220,10,221,6,222,15,223,8,224,12]));return(o,n,r,i)=>{const u=new e().rotate(n,r,i);return s(t.execute(c(o),u))}}),centroid:_("centroid",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DyGsqk2D.js").then(e=>e.y),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return e=>s(t.execute(c(e)))}),labelPoint:_("labelPoint",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DyGsqk2D.js").then(e=>e.Z),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return e=>s(t.execute(c(e)))}),simplify:_("simplify",()=>a(()=>import("./simplifyOperator-D_b6Ie6s.js"),__vite__mapDeps([241,223,2,1,3,4])).then(t=>t.execute)),isSimple:_("isSimple",()=>a(()=>import("./simplifyOperator-D_b6Ie6s.js"),__vite__mapDeps([241,223,2,1,3,4])).then(t=>t.isSimple)),convexHull:_("convexHull",()=>a(()=>import("./convexHullOperator-BW0xmeZl.js"),__vite__mapDeps([242,220,2,1,3,4])).then(t=>t.execute)),getNearestCoordinate:_("getNearestCoordinate",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DyGsqk2D.js").then(e=>e._),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o,n)=>{const r=t.getNearestCoordinate(c(e),c(o),n);return{...r,coordinate:s(r.coordinate)}}}),getNearestVertex:_("getNearestVertex",async()=>{const t=await a(()=>import("./OperatorGeodeticLength-DyGsqk2D.js").then(e=>e._),__vite__mapDeps([16,3,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,2,203,204,205,206,207,208,209,210,211,212,213,214,1,4,215,216,217,218,219,220,10,221,6,222,15,223,8,224,12,225,226,227,228,229,230,231,232,233,234]));return(e,o)=>{const n=t.getNearestVertex(c(e),c(o));return{...n,coordinate:s(n.coordinate)}}})};function d(t,e){const o=p[t];return o.loaded?o.execute.apply(void 0,e):o.load().then(()=>d(t,e))}export{d as invokeGeometryOp};
