import{i as l}from"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import{s as a}from"./index-CRroVR8n.js";function m(r){r!=null&&r.writtenProperties&&r.writtenProperties.forEach(({target:t,propName:o,newOrigin:e})=>{l(t)&&e&&t.originOf(o)!==e&&t.updateOrigin(o,e)})}async function c(r){const t=[];for(const o of r.allLayers)if("beforeSave"in o&&typeof o.beforeSave=="function"){const e=o.beforeSave();e&&t.push(e)}await Promise.allSettled(t)}const u=new Set(["layer:unsupported","property:unsupported","symbol:unsupported","symbol-layer:unsupported","url:unsupported"]);function w(r,t,o){let e=(r.messages??[]).filter(({type:n})=>n==="error").map(({name:n,message:p,details:i})=>new a(n,p,i));if(r.blockedRelativeUrls&&(e=e.concat(r.blockedRelativeUrls.map(n=>new a("url:unsupported",`Relative url '${n}' is not supported`)))),o){const{ignoreUnsupported:n,supplementalUnsupportedErrors:p=[],requiredPropertyChecksDisabled:i}=o;n&&(e=e.filter(({name:s})=>!(u.has(s)||p.includes(s)))),i&&(e=e.filter(s=>s.name!=="web-document-write:property-required"))}if(e.length>0)throw new a(t.errorName,"Failed to save due to unsupported or invalid content. See 'details.errors' for more detailed information",{errors:e})}export{m as i,c as r,w as t};
